// tslint:disable
/**
 * TikHub Private API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as globalImportUrl from 'url';
import globalAxios, { AxiosPromise, AxiosInstance } from 'axios';
import { Configuration } from '../configuration';
// Some imports not used depending on template conditions
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
// @ts-ignore
import { HttpValidationError } from '../models';
// @ts-ignore
import { ResponseModel } from '../models';
/**
 * WeChatMediaPlatformWebAPIApi - axios parameter creator
 * @export
 */
export const WeChatMediaPlatformWebAPIApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * # [中文] ### 用途: - 获取微信公众号广告 ### 参数: - url: 文章链接 ### 返回: - 广告  # [English] ### Purpose: - Get Wechat MP Article Ad ### Parameters: - url: Article URL ### Returns: - Ad  # [示例/Example] url = \"https://mp.weixin.qq.com/s/hrTDuwh0pWyJFYC93kKCrg\"
         * @summary 获取微信公众号广告/Get Wechat MP Article Ad
         * @param {string} url 文章链接/Article URL
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        fetchMpArticleAdApiV1WechatMpWebFetchMpArticleAdGet: async (url: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'url' is not null or undefined
            if (url === null || url === undefined) {
                throw new RequiredError('url','Required parameter url was null or undefined when calling fetchMpArticleAdApiV1WechatMpWebFetchMpArticleAdGet.');
            }
            const localVarPath = `/api/v1/wechat_mp/web/fetch_mp_article_ad`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }

            if (url !== undefined) {
                localVarQueryParameter['url'] = url;
            }


    
            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号广告 ### 参数: - url: 文章链接 ### 返回: - 广告  # [English] ### Purpose: - Get Wechat MP Article Ad ### Parameters: - url: Article URL ### Returns: - Ad  # [示例/Example] url = \"https://mp.weixin.qq.com/s/hrTDuwh0pWyJFYC93kKCrg\"
         * @summary 获取微信公众号广告/Get Wechat MP Article Ad
         * @param {string} url 文章链接/Article URL
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        fetchMpArticleAdApiV1WechatMpWebFetchMpArticleAdGet_1: async (url: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'url' is not null or undefined
            if (url === null || url === undefined) {
                throw new RequiredError('url','Required parameter url was null or undefined when calling fetchMpArticleAdApiV1WechatMpWebFetchMpArticleAdGet_1.');
            }
            const localVarPath = `/api/v1/wechat_mp/web/fetch_mp_article_ad`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }

            if (url !== undefined) {
                localVarQueryParameter['url'] = url;
            }


    
            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号文章评论列表 ### 参数: - url: 文章链接 - comment_id: 评论ID - offset: 偏移量 ### 返回: - 评论列表  # [English] ### Purpose: - Get Wechat MP Article Comment List ### Parameters: - url: Article URL - comment_id: Comment ID - offset: Offset ### Returns: - Comment List  # [示例/Example] url = \"https://mp.weixin.qq.com/s/Ko5V9jw9kwL8TO6Q7J3UqQ\" comment_id = \"\" offset = \"0\"
         * @summary 获取微信公众号文章评论列表/Get Wechat MP Article Comment List
         * @param {string} url 文章链接/Article URL
         * @param {string} [commentId] 评论ID/Comment ID
         * @param {string} [offset] 偏移量/Offset
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        fetchMpArticleCommentListApiV1WechatMpWebFetchMpArticleCommentListGet: async (url: string, commentId?: string, offset?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'url' is not null or undefined
            if (url === null || url === undefined) {
                throw new RequiredError('url','Required parameter url was null or undefined when calling fetchMpArticleCommentListApiV1WechatMpWebFetchMpArticleCommentListGet.');
            }
            const localVarPath = `/api/v1/wechat_mp/web/fetch_mp_article_comment_list`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }

            if (url !== undefined) {
                localVarQueryParameter['url'] = url;
            }

            if (commentId !== undefined) {
                localVarQueryParameter['comment_id'] = commentId;
            }

            if (offset !== undefined) {
                localVarQueryParameter['offset'] = offset;
            }


    
            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号文章评论列表 ### 参数: - url: 文章链接 - comment_id: 评论ID - offset: 偏移量 ### 返回: - 评论列表  # [English] ### Purpose: - Get Wechat MP Article Comment List ### Parameters: - url: Article URL - comment_id: Comment ID - offset: Offset ### Returns: - Comment List  # [示例/Example] url = \"https://mp.weixin.qq.com/s/Ko5V9jw9kwL8TO6Q7J3UqQ\" comment_id = \"\" offset = \"0\"
         * @summary 获取微信公众号文章评论列表/Get Wechat MP Article Comment List
         * @param {string} url 文章链接/Article URL
         * @param {string} [commentId] 评论ID/Comment ID
         * @param {string} [offset] 偏移量/Offset
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        fetchMpArticleCommentListApiV1WechatMpWebFetchMpArticleCommentListGet_2: async (url: string, commentId?: string, offset?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'url' is not null or undefined
            if (url === null || url === undefined) {
                throw new RequiredError('url','Required parameter url was null or undefined when calling fetchMpArticleCommentListApiV1WechatMpWebFetchMpArticleCommentListGet_2.');
            }
            const localVarPath = `/api/v1/wechat_mp/web/fetch_mp_article_comment_list`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }

            if (url !== undefined) {
                localVarQueryParameter['url'] = url;
            }

            if (commentId !== undefined) {
                localVarQueryParameter['comment_id'] = commentId;
            }

            if (offset !== undefined) {
                localVarQueryParameter['offset'] = offset;
            }


    
            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号文章评论回复列表 ### 参数: - url: 文章链接 - comment_id: 评论ID - content_id: 内容ID - offset: 偏移量 ### 返回: - 评论回复列表  # [English] ### Purpose: - Get Wechat MP Article Comment Reply List ### Parameters: - url: Article URL - comment_id: Comment ID - content_id: Content ID - offset: Offset ### Returns: - Comment Reply List  # [示例/Example] url = \"https://mp.weixin.qq.com/s/RCjkQlkRS4oKZ0GAT9slzA\" comment_id = \"3601466901697855492\" content_id = \"6387234930341970671\" offset = \"0\"
         * @summary 获取微信公众号文章评论回复列表/Get Wechat MP Article Comment Reply List
         * @param {string} commentId 评论ID/Comment ID
         * @param {string} contentId 内容ID/Content ID
         * @param {string} [url] 文章链接/Article URL
         * @param {string} [offset] 偏移量/Offset
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        fetchMpArticleCommentReplyListApiV1WechatMpWebFetchMpArticleCommentReplyListGet: async (commentId: string, contentId: string, url?: string, offset?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'commentId' is not null or undefined
            if (commentId === null || commentId === undefined) {
                throw new RequiredError('commentId','Required parameter commentId was null or undefined when calling fetchMpArticleCommentReplyListApiV1WechatMpWebFetchMpArticleCommentReplyListGet.');
            }
            // verify required parameter 'contentId' is not null or undefined
            if (contentId === null || contentId === undefined) {
                throw new RequiredError('contentId','Required parameter contentId was null or undefined when calling fetchMpArticleCommentReplyListApiV1WechatMpWebFetchMpArticleCommentReplyListGet.');
            }
            const localVarPath = `/api/v1/wechat_mp/web/fetch_mp_article_comment_reply_list`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }

            if (url !== undefined) {
                localVarQueryParameter['url'] = url;
            }

            if (commentId !== undefined) {
                localVarQueryParameter['comment_id'] = commentId;
            }

            if (contentId !== undefined) {
                localVarQueryParameter['content_id'] = contentId;
            }

            if (offset !== undefined) {
                localVarQueryParameter['offset'] = offset;
            }


    
            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号文章评论回复列表 ### 参数: - url: 文章链接 - comment_id: 评论ID - content_id: 内容ID - offset: 偏移量 ### 返回: - 评论回复列表  # [English] ### Purpose: - Get Wechat MP Article Comment Reply List ### Parameters: - url: Article URL - comment_id: Comment ID - content_id: Content ID - offset: Offset ### Returns: - Comment Reply List  # [示例/Example] url = \"https://mp.weixin.qq.com/s/RCjkQlkRS4oKZ0GAT9slzA\" comment_id = \"3601466901697855492\" content_id = \"6387234930341970671\" offset = \"0\"
         * @summary 获取微信公众号文章评论回复列表/Get Wechat MP Article Comment Reply List
         * @param {string} commentId 评论ID/Comment ID
         * @param {string} contentId 内容ID/Content ID
         * @param {string} [url] 文章链接/Article URL
         * @param {string} [offset] 偏移量/Offset
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        fetchMpArticleCommentReplyListApiV1WechatMpWebFetchMpArticleCommentReplyListGet_3: async (commentId: string, contentId: string, url?: string, offset?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'commentId' is not null or undefined
            if (commentId === null || commentId === undefined) {
                throw new RequiredError('commentId','Required parameter commentId was null or undefined when calling fetchMpArticleCommentReplyListApiV1WechatMpWebFetchMpArticleCommentReplyListGet_3.');
            }
            // verify required parameter 'contentId' is not null or undefined
            if (contentId === null || contentId === undefined) {
                throw new RequiredError('contentId','Required parameter contentId was null or undefined when calling fetchMpArticleCommentReplyListApiV1WechatMpWebFetchMpArticleCommentReplyListGet_3.');
            }
            const localVarPath = `/api/v1/wechat_mp/web/fetch_mp_article_comment_reply_list`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }

            if (url !== undefined) {
                localVarQueryParameter['url'] = url;
            }

            if (commentId !== undefined) {
                localVarQueryParameter['comment_id'] = commentId;
            }

            if (contentId !== undefined) {
                localVarQueryParameter['content_id'] = contentId;
            }

            if (offset !== undefined) {
                localVarQueryParameter['offset'] = offset;
            }


    
            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号文章详情的HTML，如果你需要获取详细的JSON格式数据，请使用`/api/v1/wechat_mp/web/fetch_mp_article_detail_json`接口 - 此接口收费贵，价格：0.01$/次 ### 参数: - url: 文章链接 ### 返回: - 文章详情的HTML  # [English] ### Purpose: - Get WeChat MP Article Detail, if you need detailed JSON format data, please use the `/api/v1/wechat_mp/web/fetch_mp_article_detail_json` interface - This interface is more expensive, price: 0.01$/time ### Parameters: - url: Article URL ### Returns: - Article Detail HTML  # [示例/Example] url = \"https://mp.weixin.qq.com/s/TSNQKkRpN1qbKsT7BvzqIw\"
         * @summary 获取微信公众号文章详情的HTML/Get Wechat MP Article Detail HTML
         * @param {string} url 文章链接/Article URL
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        fetchMpArticleDetailHtmlApiV1WechatMpWebFetchMpArticleDetailHtmlGet: async (url: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'url' is not null or undefined
            if (url === null || url === undefined) {
                throw new RequiredError('url','Required parameter url was null or undefined when calling fetchMpArticleDetailHtmlApiV1WechatMpWebFetchMpArticleDetailHtmlGet.');
            }
            const localVarPath = `/api/v1/wechat_mp/web/fetch_mp_article_detail_html`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }

            if (url !== undefined) {
                localVarQueryParameter['url'] = url;
            }


    
            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号文章详情的HTML，如果你需要获取详细的JSON格式数据，请使用`/api/v1/wechat_mp/web/fetch_mp_article_detail_json`接口 - 此接口收费贵，价格：0.01$/次 ### 参数: - url: 文章链接 ### 返回: - 文章详情的HTML  # [English] ### Purpose: - Get WeChat MP Article Detail, if you need detailed JSON format data, please use the `/api/v1/wechat_mp/web/fetch_mp_article_detail_json` interface - This interface is more expensive, price: 0.01$/time ### Parameters: - url: Article URL ### Returns: - Article Detail HTML  # [示例/Example] url = \"https://mp.weixin.qq.com/s/TSNQKkRpN1qbKsT7BvzqIw\"
         * @summary 获取微信公众号文章详情的HTML/Get Wechat MP Article Detail HTML
         * @param {string} url 文章链接/Article URL
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        fetchMpArticleDetailHtmlApiV1WechatMpWebFetchMpArticleDetailHtmlGet_4: async (url: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'url' is not null or undefined
            if (url === null || url === undefined) {
                throw new RequiredError('url','Required parameter url was null or undefined when calling fetchMpArticleDetailHtmlApiV1WechatMpWebFetchMpArticleDetailHtmlGet_4.');
            }
            const localVarPath = `/api/v1/wechat_mp/web/fetch_mp_article_detail_html`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }

            if (url !== undefined) {
                localVarQueryParameter['url'] = url;
            }


    
            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号文章详情的JSON格式数据 - 此接口收费便宜，如果你需要获取详细的HTML格式数据，请使用`/api/v1/wechat_mp/web/fetch_mp_article_detail_html`接口，但是此接口收费更贵。 - 价格：0.001$/次 ### 参数: - url: 文章链接 ### 返回: - 文章详情的HTML  # [English] ### Purpose: - Get WeChat MP Article Detail in JSON format - This interface is cheaper, if you need detailed HTML format data, please use the `/api/v1/wechat_mp/web/fetch_mp_article_detail_html` interface, but this interface is more expensive. - Price: 0.001$/time ### Parameters: - url: Article URL ### Returns: - Article Detail HTML  # [示例/Example] url = \"https://mp.weixin.qq.com/s/TSNQKkRpN1qbKsT7BvzqIw\"
         * @summary 获取微信公众号文章详情的JSON/Get Wechat MP Article Detail JSON
         * @param {string} url 文章链接/Article URL
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        fetchMpArticleDetailJsonApiV1WechatMpWebFetchMpArticleDetailJsonGet: async (url: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'url' is not null or undefined
            if (url === null || url === undefined) {
                throw new RequiredError('url','Required parameter url was null or undefined when calling fetchMpArticleDetailJsonApiV1WechatMpWebFetchMpArticleDetailJsonGet.');
            }
            const localVarPath = `/api/v1/wechat_mp/web/fetch_mp_article_detail_json`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }

            if (url !== undefined) {
                localVarQueryParameter['url'] = url;
            }


    
            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号文章详情的JSON格式数据 - 此接口收费便宜，如果你需要获取详细的HTML格式数据，请使用`/api/v1/wechat_mp/web/fetch_mp_article_detail_html`接口，但是此接口收费更贵。 - 价格：0.001$/次 ### 参数: - url: 文章链接 ### 返回: - 文章详情的HTML  # [English] ### Purpose: - Get WeChat MP Article Detail in JSON format - This interface is cheaper, if you need detailed HTML format data, please use the `/api/v1/wechat_mp/web/fetch_mp_article_detail_html` interface, but this interface is more expensive. - Price: 0.001$/time ### Parameters: - url: Article URL ### Returns: - Article Detail HTML  # [示例/Example] url = \"https://mp.weixin.qq.com/s/TSNQKkRpN1qbKsT7BvzqIw\"
         * @summary 获取微信公众号文章详情的JSON/Get Wechat MP Article Detail JSON
         * @param {string} url 文章链接/Article URL
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        fetchMpArticleDetailJsonApiV1WechatMpWebFetchMpArticleDetailJsonGet_5: async (url: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'url' is not null or undefined
            if (url === null || url === undefined) {
                throw new RequiredError('url','Required parameter url was null or undefined when calling fetchMpArticleDetailJsonApiV1WechatMpWebFetchMpArticleDetailJsonGet_5.');
            }
            const localVarPath = `/api/v1/wechat_mp/web/fetch_mp_article_detail_json`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }

            if (url !== undefined) {
                localVarQueryParameter['url'] = url;
            }


    
            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号文章列表 ### 参数: - ghid: 公众号ID - offset: 偏移量 ### 返回: - 文章列表  # [English] ### Purpose: - Get Wechat MP Article List ### Parameters: - ghid: MP ID - offset: Offset ### Returns: - Article List  # [示例/Example] ghid = \"gh_a3d35d4c9d3f\" offset = \"\"
         * @summary 获取微信公众号文章列表/Get Wechat MP Article List
         * @param {string} ghid 公众号ID/MP ID
         * @param {string} [offset] 偏移量/Offset
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        fetchMpArticleListApiV1WechatMpWebFetchMpArticleListGet: async (ghid: string, offset?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'ghid' is not null or undefined
            if (ghid === null || ghid === undefined) {
                throw new RequiredError('ghid','Required parameter ghid was null or undefined when calling fetchMpArticleListApiV1WechatMpWebFetchMpArticleListGet.');
            }
            const localVarPath = `/api/v1/wechat_mp/web/fetch_mp_article_list`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }

            if (ghid !== undefined) {
                localVarQueryParameter['ghid'] = ghid;
            }

            if (offset !== undefined) {
                localVarQueryParameter['offset'] = offset;
            }


    
            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号文章列表 ### 参数: - ghid: 公众号ID - offset: 偏移量 ### 返回: - 文章列表  # [English] ### Purpose: - Get Wechat MP Article List ### Parameters: - ghid: MP ID - offset: Offset ### Returns: - Article List  # [示例/Example] ghid = \"gh_a3d35d4c9d3f\" offset = \"\"
         * @summary 获取微信公众号文章列表/Get Wechat MP Article List
         * @param {string} ghid 公众号ID/MP ID
         * @param {string} [offset] 偏移量/Offset
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        fetchMpArticleListApiV1WechatMpWebFetchMpArticleListGet_6: async (ghid: string, offset?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'ghid' is not null or undefined
            if (ghid === null || ghid === undefined) {
                throw new RequiredError('ghid','Required parameter ghid was null or undefined when calling fetchMpArticleListApiV1WechatMpWebFetchMpArticleListGet_6.');
            }
            const localVarPath = `/api/v1/wechat_mp/web/fetch_mp_article_list`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }

            if (ghid !== undefined) {
                localVarQueryParameter['ghid'] = ghid;
            }

            if (offset !== undefined) {
                localVarQueryParameter['offset'] = offset;
            }


    
            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号文章阅读量 ### 参数: - url: 文章链接 - comment_id: 评论ID ### 返回: - 阅读量  # [English] ### Purpose: - Get Wechat MP Article Read Count ### Parameters: - url: Article URL - comment_id: Comment ID ### Returns: - Read Count  # [示例/Example] url = \"https://mp.weixin.qq.com/s/hrTDuwh0pWyJFYC93kKCrg\" comment_id = \"3363399664632332289\"
         * @summary 获取微信公众号文章阅读量/Get Wechat MP Article Read Count
         * @param {string} url 文章链接/Article URL
         * @param {string} commentId 评论ID/Comment ID
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        fetchMpArticleReadCountApiV1WechatMpWebFetchMpArticleReadCountGet: async (url: string, commentId: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'url' is not null or undefined
            if (url === null || url === undefined) {
                throw new RequiredError('url','Required parameter url was null or undefined when calling fetchMpArticleReadCountApiV1WechatMpWebFetchMpArticleReadCountGet.');
            }
            // verify required parameter 'commentId' is not null or undefined
            if (commentId === null || commentId === undefined) {
                throw new RequiredError('commentId','Required parameter commentId was null or undefined when calling fetchMpArticleReadCountApiV1WechatMpWebFetchMpArticleReadCountGet.');
            }
            const localVarPath = `/api/v1/wechat_mp/web/fetch_mp_article_read_count`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }

            if (url !== undefined) {
                localVarQueryParameter['url'] = url;
            }

            if (commentId !== undefined) {
                localVarQueryParameter['comment_id'] = commentId;
            }


    
            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号文章阅读量 ### 参数: - url: 文章链接 - comment_id: 评论ID ### 返回: - 阅读量  # [English] ### Purpose: - Get Wechat MP Article Read Count ### Parameters: - url: Article URL - comment_id: Comment ID ### Returns: - Read Count  # [示例/Example] url = \"https://mp.weixin.qq.com/s/hrTDuwh0pWyJFYC93kKCrg\" comment_id = \"3363399664632332289\"
         * @summary 获取微信公众号文章阅读量/Get Wechat MP Article Read Count
         * @param {string} url 文章链接/Article URL
         * @param {string} commentId 评论ID/Comment ID
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        fetchMpArticleReadCountApiV1WechatMpWebFetchMpArticleReadCountGet_7: async (url: string, commentId: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'url' is not null or undefined
            if (url === null || url === undefined) {
                throw new RequiredError('url','Required parameter url was null or undefined when calling fetchMpArticleReadCountApiV1WechatMpWebFetchMpArticleReadCountGet_7.');
            }
            // verify required parameter 'commentId' is not null or undefined
            if (commentId === null || commentId === undefined) {
                throw new RequiredError('commentId','Required parameter commentId was null or undefined when calling fetchMpArticleReadCountApiV1WechatMpWebFetchMpArticleReadCountGet_7.');
            }
            const localVarPath = `/api/v1/wechat_mp/web/fetch_mp_article_read_count`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }

            if (url !== undefined) {
                localVarQueryParameter['url'] = url;
            }

            if (commentId !== undefined) {
                localVarQueryParameter['comment_id'] = commentId;
            }


    
            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号文章永久链接 ### 参数: - sogou_url: 搜狗链接 ### 返回: - 永久链接  # [English] ### Purpose: - Get Wechat MP Article URL ### Parameters: - sogou_url: Sogou URL ### Returns: - Article URL  # [示例/Example] sogou_url = \"https://weixin.sogou.com/link?url=dn9a_-gY295K0Rci_xozVXfdMkSQTLW6cwJThYulHEtVjXrGTiVgS5mzcw64XRlRaPIdMgILsPEBI9djq3byAlqXa8Fplpd9bV3r44ewJj5IFttt-prmTSHShu8JtNlpDYR_z_1xvD2J_XrGTUriRYOOY2mt9pZSIUQEepUVTybxAOW4P5fEPd23R0CgK6W3KEODtIkcv1U5w5VkZ8a7_lyyAqreiCgr1YH9mz_7mzFDl6rX6ZnkVYNsUHV_OmaXBUCqpZ1Pa6YO8fIRwtipOg..&type=2&query=deepseek&token=C2E90D2050EB6EA5C2C4EDB1541D855FC322013E67C5DC5A&k=4&h=k\"
         * @summary 获取微信公众号文章永久链接/Get Wechat MP Article URL
         * @param {string} sogouUrl 搜狗链接/Sogou URL
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        fetchMpArticleUrlApiV1WechatMpWebFetchMpArticleUrlGet: async (sogouUrl: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'sogouUrl' is not null or undefined
            if (sogouUrl === null || sogouUrl === undefined) {
                throw new RequiredError('sogouUrl','Required parameter sogouUrl was null or undefined when calling fetchMpArticleUrlApiV1WechatMpWebFetchMpArticleUrlGet.');
            }
            const localVarPath = `/api/v1/wechat_mp/web/fetch_mp_article_url`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }

            if (sogouUrl !== undefined) {
                localVarQueryParameter['sogou_url'] = sogouUrl;
            }


    
            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号文章永久链接 ### 参数: - sogou_url: 搜狗链接 ### 返回: - 永久链接  # [English] ### Purpose: - Get Wechat MP Article URL ### Parameters: - sogou_url: Sogou URL ### Returns: - Article URL  # [示例/Example] sogou_url = \"https://weixin.sogou.com/link?url=dn9a_-gY295K0Rci_xozVXfdMkSQTLW6cwJThYulHEtVjXrGTiVgS5mzcw64XRlRaPIdMgILsPEBI9djq3byAlqXa8Fplpd9bV3r44ewJj5IFttt-prmTSHShu8JtNlpDYR_z_1xvD2J_XrGTUriRYOOY2mt9pZSIUQEepUVTybxAOW4P5fEPd23R0CgK6W3KEODtIkcv1U5w5VkZ8a7_lyyAqreiCgr1YH9mz_7mzFDl6rX6ZnkVYNsUHV_OmaXBUCqpZ1Pa6YO8fIRwtipOg..&type=2&query=deepseek&token=C2E90D2050EB6EA5C2C4EDB1541D855FC322013E67C5DC5A&k=4&h=k\"
         * @summary 获取微信公众号文章永久链接/Get Wechat MP Article URL
         * @param {string} sogouUrl 搜狗链接/Sogou URL
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        fetchMpArticleUrlApiV1WechatMpWebFetchMpArticleUrlGet_8: async (sogouUrl: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'sogouUrl' is not null or undefined
            if (sogouUrl === null || sogouUrl === undefined) {
                throw new RequiredError('sogouUrl','Required parameter sogouUrl was null or undefined when calling fetchMpArticleUrlApiV1WechatMpWebFetchMpArticleUrlGet_8.');
            }
            const localVarPath = `/api/v1/wechat_mp/web/fetch_mp_article_url`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }

            if (sogouUrl !== undefined) {
                localVarQueryParameter['sogou_url'] = sogouUrl;
            }


    
            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号长链接转短链接 ### 参数: - url: 文章链接 ### 返回: - 短链接  # [English] ### Purpose: - Get Wechat MP Long URL to Short URL ### Parameters: - url: Article URL ### Returns: - Short URL  # [示例/Example] url = \"http://mp.weixin.qq.com/s?__biz=MzIyMDQzMTM4Mg==&mid=2247504868&idx=1&sn=37ee48875df1be54cb766783177ce61d\"
         * @summary 获取微信公众号长链接转短链接/Get Wechat MP Long URL to Short URL
         * @param {string} url 文章链接/Article URL
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        fetchMpArticleUrlConversionApiV1WechatMpWebFetchMpArticleUrlConversionGet: async (url: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'url' is not null or undefined
            if (url === null || url === undefined) {
                throw new RequiredError('url','Required parameter url was null or undefined when calling fetchMpArticleUrlConversionApiV1WechatMpWebFetchMpArticleUrlConversionGet.');
            }
            const localVarPath = `/api/v1/wechat_mp/web/fetch_mp_article_url_conversion`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }

            if (url !== undefined) {
                localVarQueryParameter['url'] = url;
            }


    
            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号长链接转短链接 ### 参数: - url: 文章链接 ### 返回: - 短链接  # [English] ### Purpose: - Get Wechat MP Long URL to Short URL ### Parameters: - url: Article URL ### Returns: - Short URL  # [示例/Example] url = \"http://mp.weixin.qq.com/s?__biz=MzIyMDQzMTM4Mg==&mid=2247504868&idx=1&sn=37ee48875df1be54cb766783177ce61d\"
         * @summary 获取微信公众号长链接转短链接/Get Wechat MP Long URL to Short URL
         * @param {string} url 文章链接/Article URL
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        fetchMpArticleUrlConversionApiV1WechatMpWebFetchMpArticleUrlConversionGet_9: async (url: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'url' is not null or undefined
            if (url === null || url === undefined) {
                throw new RequiredError('url','Required parameter url was null or undefined when calling fetchMpArticleUrlConversionApiV1WechatMpWebFetchMpArticleUrlConversionGet_9.');
            }
            const localVarPath = `/api/v1/wechat_mp/web/fetch_mp_article_url_conversion`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }

            if (url !== undefined) {
                localVarQueryParameter['url'] = url;
            }


    
            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号关联文章 ### 参数: - url: 文章链接 ### 返回: - 关联文章  # [English] ### Purpose: - Get Wechat MP Related Articles ### Parameters: - url: Article URL ### Returns: - Related Articles  # [示例/Example] url = \"https://mp.weixin.qq.com/s/Ko5V9jw9kwL8TO6Q7J3UqQ\"
         * @summary 获取微信公众号关联文章/Get Wechat MP Related Articles
         * @param {string} url 文章链接/Article URL
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        fetchMpRelatedArticlesApiV1WechatMpWebFetchMpRelatedArticlesGet: async (url: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'url' is not null or undefined
            if (url === null || url === undefined) {
                throw new RequiredError('url','Required parameter url was null or undefined when calling fetchMpRelatedArticlesApiV1WechatMpWebFetchMpRelatedArticlesGet.');
            }
            const localVarPath = `/api/v1/wechat_mp/web/fetch_mp_related_articles`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }

            if (url !== undefined) {
                localVarQueryParameter['url'] = url;
            }


    
            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号关联文章 ### 参数: - url: 文章链接 ### 返回: - 关联文章  # [English] ### Purpose: - Get Wechat MP Related Articles ### Parameters: - url: Article URL ### Returns: - Related Articles  # [示例/Example] url = \"https://mp.weixin.qq.com/s/Ko5V9jw9kwL8TO6Q7J3UqQ\"
         * @summary 获取微信公众号关联文章/Get Wechat MP Related Articles
         * @param {string} url 文章链接/Article URL
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        fetchMpRelatedArticlesApiV1WechatMpWebFetchMpRelatedArticlesGet_10: async (url: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'url' is not null or undefined
            if (url === null || url === undefined) {
                throw new RequiredError('url','Required parameter url was null or undefined when calling fetchMpRelatedArticlesApiV1WechatMpWebFetchMpRelatedArticlesGet_10.');
            }
            const localVarPath = `/api/v1/wechat_mp/web/fetch_mp_related_articles`;
            const localVarUrlObj = globalImportUrl.parse(localVarPath, true);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }
            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            // authentication bearer required
            // http bearer authentication required
            if (configuration && configuration.accessToken) {
                const accessToken = typeof configuration.accessToken === 'function'
                    ? configuration.accessToken()
                    : configuration.accessToken;
                localVarHeaderParameter["Authorization"] = "Bearer " + accessToken;
            }

            if (url !== undefined) {
                localVarQueryParameter['url'] = url;
            }


    
            localVarUrlObj.query = {...localVarUrlObj.query, ...localVarQueryParameter, ...options.query};
            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943
            delete localVarUrlObj.search;
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: globalImportUrl.format(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * WeChatMediaPlatformWebAPIApi - functional programming interface
 * @export
 */
export const WeChatMediaPlatformWebAPIApiFp = function(configuration?: Configuration) {
    return {
        /**
         * # [中文] ### 用途: - 获取微信公众号广告 ### 参数: - url: 文章链接 ### 返回: - 广告  # [English] ### Purpose: - Get Wechat MP Article Ad ### Parameters: - url: Article URL ### Returns: - Ad  # [示例/Example] url = \"https://mp.weixin.qq.com/s/hrTDuwh0pWyJFYC93kKCrg\"
         * @summary 获取微信公众号广告/Get Wechat MP Article Ad
         * @param {string} url 文章链接/Article URL
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async fetchMpArticleAdApiV1WechatMpWebFetchMpArticleAdGet(url: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResponseModel>> {
            const localVarAxiosArgs = await WeChatMediaPlatformWebAPIApiAxiosParamCreator(configuration).fetchMpArticleAdApiV1WechatMpWebFetchMpArticleAdGet(url, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号广告 ### 参数: - url: 文章链接 ### 返回: - 广告  # [English] ### Purpose: - Get Wechat MP Article Ad ### Parameters: - url: Article URL ### Returns: - Ad  # [示例/Example] url = \"https://mp.weixin.qq.com/s/hrTDuwh0pWyJFYC93kKCrg\"
         * @summary 获取微信公众号广告/Get Wechat MP Article Ad
         * @param {string} url 文章链接/Article URL
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async fetchMpArticleAdApiV1WechatMpWebFetchMpArticleAdGet_1(url: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResponseModel>> {
            const localVarAxiosArgs = await WeChatMediaPlatformWebAPIApiAxiosParamCreator(configuration).fetchMpArticleAdApiV1WechatMpWebFetchMpArticleAdGet_1(url, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号文章评论列表 ### 参数: - url: 文章链接 - comment_id: 评论ID - offset: 偏移量 ### 返回: - 评论列表  # [English] ### Purpose: - Get Wechat MP Article Comment List ### Parameters: - url: Article URL - comment_id: Comment ID - offset: Offset ### Returns: - Comment List  # [示例/Example] url = \"https://mp.weixin.qq.com/s/Ko5V9jw9kwL8TO6Q7J3UqQ\" comment_id = \"\" offset = \"0\"
         * @summary 获取微信公众号文章评论列表/Get Wechat MP Article Comment List
         * @param {string} url 文章链接/Article URL
         * @param {string} [commentId] 评论ID/Comment ID
         * @param {string} [offset] 偏移量/Offset
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async fetchMpArticleCommentListApiV1WechatMpWebFetchMpArticleCommentListGet(url: string, commentId?: string, offset?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResponseModel>> {
            const localVarAxiosArgs = await WeChatMediaPlatformWebAPIApiAxiosParamCreator(configuration).fetchMpArticleCommentListApiV1WechatMpWebFetchMpArticleCommentListGet(url, commentId, offset, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号文章评论列表 ### 参数: - url: 文章链接 - comment_id: 评论ID - offset: 偏移量 ### 返回: - 评论列表  # [English] ### Purpose: - Get Wechat MP Article Comment List ### Parameters: - url: Article URL - comment_id: Comment ID - offset: Offset ### Returns: - Comment List  # [示例/Example] url = \"https://mp.weixin.qq.com/s/Ko5V9jw9kwL8TO6Q7J3UqQ\" comment_id = \"\" offset = \"0\"
         * @summary 获取微信公众号文章评论列表/Get Wechat MP Article Comment List
         * @param {string} url 文章链接/Article URL
         * @param {string} [commentId] 评论ID/Comment ID
         * @param {string} [offset] 偏移量/Offset
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async fetchMpArticleCommentListApiV1WechatMpWebFetchMpArticleCommentListGet_2(url: string, commentId?: string, offset?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResponseModel>> {
            const localVarAxiosArgs = await WeChatMediaPlatformWebAPIApiAxiosParamCreator(configuration).fetchMpArticleCommentListApiV1WechatMpWebFetchMpArticleCommentListGet_2(url, commentId, offset, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号文章评论回复列表 ### 参数: - url: 文章链接 - comment_id: 评论ID - content_id: 内容ID - offset: 偏移量 ### 返回: - 评论回复列表  # [English] ### Purpose: - Get Wechat MP Article Comment Reply List ### Parameters: - url: Article URL - comment_id: Comment ID - content_id: Content ID - offset: Offset ### Returns: - Comment Reply List  # [示例/Example] url = \"https://mp.weixin.qq.com/s/RCjkQlkRS4oKZ0GAT9slzA\" comment_id = \"3601466901697855492\" content_id = \"6387234930341970671\" offset = \"0\"
         * @summary 获取微信公众号文章评论回复列表/Get Wechat MP Article Comment Reply List
         * @param {string} commentId 评论ID/Comment ID
         * @param {string} contentId 内容ID/Content ID
         * @param {string} [url] 文章链接/Article URL
         * @param {string} [offset] 偏移量/Offset
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async fetchMpArticleCommentReplyListApiV1WechatMpWebFetchMpArticleCommentReplyListGet(commentId: string, contentId: string, url?: string, offset?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResponseModel>> {
            const localVarAxiosArgs = await WeChatMediaPlatformWebAPIApiAxiosParamCreator(configuration).fetchMpArticleCommentReplyListApiV1WechatMpWebFetchMpArticleCommentReplyListGet(commentId, contentId, url, offset, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号文章评论回复列表 ### 参数: - url: 文章链接 - comment_id: 评论ID - content_id: 内容ID - offset: 偏移量 ### 返回: - 评论回复列表  # [English] ### Purpose: - Get Wechat MP Article Comment Reply List ### Parameters: - url: Article URL - comment_id: Comment ID - content_id: Content ID - offset: Offset ### Returns: - Comment Reply List  # [示例/Example] url = \"https://mp.weixin.qq.com/s/RCjkQlkRS4oKZ0GAT9slzA\" comment_id = \"3601466901697855492\" content_id = \"6387234930341970671\" offset = \"0\"
         * @summary 获取微信公众号文章评论回复列表/Get Wechat MP Article Comment Reply List
         * @param {string} commentId 评论ID/Comment ID
         * @param {string} contentId 内容ID/Content ID
         * @param {string} [url] 文章链接/Article URL
         * @param {string} [offset] 偏移量/Offset
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async fetchMpArticleCommentReplyListApiV1WechatMpWebFetchMpArticleCommentReplyListGet_3(commentId: string, contentId: string, url?: string, offset?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResponseModel>> {
            const localVarAxiosArgs = await WeChatMediaPlatformWebAPIApiAxiosParamCreator(configuration).fetchMpArticleCommentReplyListApiV1WechatMpWebFetchMpArticleCommentReplyListGet_3(commentId, contentId, url, offset, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号文章详情的HTML，如果你需要获取详细的JSON格式数据，请使用`/api/v1/wechat_mp/web/fetch_mp_article_detail_json`接口 - 此接口收费贵，价格：0.01$/次 ### 参数: - url: 文章链接 ### 返回: - 文章详情的HTML  # [English] ### Purpose: - Get WeChat MP Article Detail, if you need detailed JSON format data, please use the `/api/v1/wechat_mp/web/fetch_mp_article_detail_json` interface - This interface is more expensive, price: 0.01$/time ### Parameters: - url: Article URL ### Returns: - Article Detail HTML  # [示例/Example] url = \"https://mp.weixin.qq.com/s/TSNQKkRpN1qbKsT7BvzqIw\"
         * @summary 获取微信公众号文章详情的HTML/Get Wechat MP Article Detail HTML
         * @param {string} url 文章链接/Article URL
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async fetchMpArticleDetailHtmlApiV1WechatMpWebFetchMpArticleDetailHtmlGet(url: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResponseModel>> {
            const localVarAxiosArgs = await WeChatMediaPlatformWebAPIApiAxiosParamCreator(configuration).fetchMpArticleDetailHtmlApiV1WechatMpWebFetchMpArticleDetailHtmlGet(url, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号文章详情的HTML，如果你需要获取详细的JSON格式数据，请使用`/api/v1/wechat_mp/web/fetch_mp_article_detail_json`接口 - 此接口收费贵，价格：0.01$/次 ### 参数: - url: 文章链接 ### 返回: - 文章详情的HTML  # [English] ### Purpose: - Get WeChat MP Article Detail, if you need detailed JSON format data, please use the `/api/v1/wechat_mp/web/fetch_mp_article_detail_json` interface - This interface is more expensive, price: 0.01$/time ### Parameters: - url: Article URL ### Returns: - Article Detail HTML  # [示例/Example] url = \"https://mp.weixin.qq.com/s/TSNQKkRpN1qbKsT7BvzqIw\"
         * @summary 获取微信公众号文章详情的HTML/Get Wechat MP Article Detail HTML
         * @param {string} url 文章链接/Article URL
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async fetchMpArticleDetailHtmlApiV1WechatMpWebFetchMpArticleDetailHtmlGet_4(url: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResponseModel>> {
            const localVarAxiosArgs = await WeChatMediaPlatformWebAPIApiAxiosParamCreator(configuration).fetchMpArticleDetailHtmlApiV1WechatMpWebFetchMpArticleDetailHtmlGet_4(url, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号文章详情的JSON格式数据 - 此接口收费便宜，如果你需要获取详细的HTML格式数据，请使用`/api/v1/wechat_mp/web/fetch_mp_article_detail_html`接口，但是此接口收费更贵。 - 价格：0.001$/次 ### 参数: - url: 文章链接 ### 返回: - 文章详情的HTML  # [English] ### Purpose: - Get WeChat MP Article Detail in JSON format - This interface is cheaper, if you need detailed HTML format data, please use the `/api/v1/wechat_mp/web/fetch_mp_article_detail_html` interface, but this interface is more expensive. - Price: 0.001$/time ### Parameters: - url: Article URL ### Returns: - Article Detail HTML  # [示例/Example] url = \"https://mp.weixin.qq.com/s/TSNQKkRpN1qbKsT7BvzqIw\"
         * @summary 获取微信公众号文章详情的JSON/Get Wechat MP Article Detail JSON
         * @param {string} url 文章链接/Article URL
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async fetchMpArticleDetailJsonApiV1WechatMpWebFetchMpArticleDetailJsonGet(url: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResponseModel>> {
            const localVarAxiosArgs = await WeChatMediaPlatformWebAPIApiAxiosParamCreator(configuration).fetchMpArticleDetailJsonApiV1WechatMpWebFetchMpArticleDetailJsonGet(url, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号文章详情的JSON格式数据 - 此接口收费便宜，如果你需要获取详细的HTML格式数据，请使用`/api/v1/wechat_mp/web/fetch_mp_article_detail_html`接口，但是此接口收费更贵。 - 价格：0.001$/次 ### 参数: - url: 文章链接 ### 返回: - 文章详情的HTML  # [English] ### Purpose: - Get WeChat MP Article Detail in JSON format - This interface is cheaper, if you need detailed HTML format data, please use the `/api/v1/wechat_mp/web/fetch_mp_article_detail_html` interface, but this interface is more expensive. - Price: 0.001$/time ### Parameters: - url: Article URL ### Returns: - Article Detail HTML  # [示例/Example] url = \"https://mp.weixin.qq.com/s/TSNQKkRpN1qbKsT7BvzqIw\"
         * @summary 获取微信公众号文章详情的JSON/Get Wechat MP Article Detail JSON
         * @param {string} url 文章链接/Article URL
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async fetchMpArticleDetailJsonApiV1WechatMpWebFetchMpArticleDetailJsonGet_5(url: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResponseModel>> {
            const localVarAxiosArgs = await WeChatMediaPlatformWebAPIApiAxiosParamCreator(configuration).fetchMpArticleDetailJsonApiV1WechatMpWebFetchMpArticleDetailJsonGet_5(url, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号文章列表 ### 参数: - ghid: 公众号ID - offset: 偏移量 ### 返回: - 文章列表  # [English] ### Purpose: - Get Wechat MP Article List ### Parameters: - ghid: MP ID - offset: Offset ### Returns: - Article List  # [示例/Example] ghid = \"gh_a3d35d4c9d3f\" offset = \"\"
         * @summary 获取微信公众号文章列表/Get Wechat MP Article List
         * @param {string} ghid 公众号ID/MP ID
         * @param {string} [offset] 偏移量/Offset
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async fetchMpArticleListApiV1WechatMpWebFetchMpArticleListGet(ghid: string, offset?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResponseModel>> {
            const localVarAxiosArgs = await WeChatMediaPlatformWebAPIApiAxiosParamCreator(configuration).fetchMpArticleListApiV1WechatMpWebFetchMpArticleListGet(ghid, offset, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号文章列表 ### 参数: - ghid: 公众号ID - offset: 偏移量 ### 返回: - 文章列表  # [English] ### Purpose: - Get Wechat MP Article List ### Parameters: - ghid: MP ID - offset: Offset ### Returns: - Article List  # [示例/Example] ghid = \"gh_a3d35d4c9d3f\" offset = \"\"
         * @summary 获取微信公众号文章列表/Get Wechat MP Article List
         * @param {string} ghid 公众号ID/MP ID
         * @param {string} [offset] 偏移量/Offset
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async fetchMpArticleListApiV1WechatMpWebFetchMpArticleListGet_6(ghid: string, offset?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResponseModel>> {
            const localVarAxiosArgs = await WeChatMediaPlatformWebAPIApiAxiosParamCreator(configuration).fetchMpArticleListApiV1WechatMpWebFetchMpArticleListGet_6(ghid, offset, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号文章阅读量 ### 参数: - url: 文章链接 - comment_id: 评论ID ### 返回: - 阅读量  # [English] ### Purpose: - Get Wechat MP Article Read Count ### Parameters: - url: Article URL - comment_id: Comment ID ### Returns: - Read Count  # [示例/Example] url = \"https://mp.weixin.qq.com/s/hrTDuwh0pWyJFYC93kKCrg\" comment_id = \"3363399664632332289\"
         * @summary 获取微信公众号文章阅读量/Get Wechat MP Article Read Count
         * @param {string} url 文章链接/Article URL
         * @param {string} commentId 评论ID/Comment ID
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async fetchMpArticleReadCountApiV1WechatMpWebFetchMpArticleReadCountGet(url: string, commentId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResponseModel>> {
            const localVarAxiosArgs = await WeChatMediaPlatformWebAPIApiAxiosParamCreator(configuration).fetchMpArticleReadCountApiV1WechatMpWebFetchMpArticleReadCountGet(url, commentId, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号文章阅读量 ### 参数: - url: 文章链接 - comment_id: 评论ID ### 返回: - 阅读量  # [English] ### Purpose: - Get Wechat MP Article Read Count ### Parameters: - url: Article URL - comment_id: Comment ID ### Returns: - Read Count  # [示例/Example] url = \"https://mp.weixin.qq.com/s/hrTDuwh0pWyJFYC93kKCrg\" comment_id = \"3363399664632332289\"
         * @summary 获取微信公众号文章阅读量/Get Wechat MP Article Read Count
         * @param {string} url 文章链接/Article URL
         * @param {string} commentId 评论ID/Comment ID
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async fetchMpArticleReadCountApiV1WechatMpWebFetchMpArticleReadCountGet_7(url: string, commentId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResponseModel>> {
            const localVarAxiosArgs = await WeChatMediaPlatformWebAPIApiAxiosParamCreator(configuration).fetchMpArticleReadCountApiV1WechatMpWebFetchMpArticleReadCountGet_7(url, commentId, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号文章永久链接 ### 参数: - sogou_url: 搜狗链接 ### 返回: - 永久链接  # [English] ### Purpose: - Get Wechat MP Article URL ### Parameters: - sogou_url: Sogou URL ### Returns: - Article URL  # [示例/Example] sogou_url = \"https://weixin.sogou.com/link?url=dn9a_-gY295K0Rci_xozVXfdMkSQTLW6cwJThYulHEtVjXrGTiVgS5mzcw64XRlRaPIdMgILsPEBI9djq3byAlqXa8Fplpd9bV3r44ewJj5IFttt-prmTSHShu8JtNlpDYR_z_1xvD2J_XrGTUriRYOOY2mt9pZSIUQEepUVTybxAOW4P5fEPd23R0CgK6W3KEODtIkcv1U5w5VkZ8a7_lyyAqreiCgr1YH9mz_7mzFDl6rX6ZnkVYNsUHV_OmaXBUCqpZ1Pa6YO8fIRwtipOg..&type=2&query=deepseek&token=C2E90D2050EB6EA5C2C4EDB1541D855FC322013E67C5DC5A&k=4&h=k\"
         * @summary 获取微信公众号文章永久链接/Get Wechat MP Article URL
         * @param {string} sogouUrl 搜狗链接/Sogou URL
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async fetchMpArticleUrlApiV1WechatMpWebFetchMpArticleUrlGet(sogouUrl: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResponseModel>> {
            const localVarAxiosArgs = await WeChatMediaPlatformWebAPIApiAxiosParamCreator(configuration).fetchMpArticleUrlApiV1WechatMpWebFetchMpArticleUrlGet(sogouUrl, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号文章永久链接 ### 参数: - sogou_url: 搜狗链接 ### 返回: - 永久链接  # [English] ### Purpose: - Get Wechat MP Article URL ### Parameters: - sogou_url: Sogou URL ### Returns: - Article URL  # [示例/Example] sogou_url = \"https://weixin.sogou.com/link?url=dn9a_-gY295K0Rci_xozVXfdMkSQTLW6cwJThYulHEtVjXrGTiVgS5mzcw64XRlRaPIdMgILsPEBI9djq3byAlqXa8Fplpd9bV3r44ewJj5IFttt-prmTSHShu8JtNlpDYR_z_1xvD2J_XrGTUriRYOOY2mt9pZSIUQEepUVTybxAOW4P5fEPd23R0CgK6W3KEODtIkcv1U5w5VkZ8a7_lyyAqreiCgr1YH9mz_7mzFDl6rX6ZnkVYNsUHV_OmaXBUCqpZ1Pa6YO8fIRwtipOg..&type=2&query=deepseek&token=C2E90D2050EB6EA5C2C4EDB1541D855FC322013E67C5DC5A&k=4&h=k\"
         * @summary 获取微信公众号文章永久链接/Get Wechat MP Article URL
         * @param {string} sogouUrl 搜狗链接/Sogou URL
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async fetchMpArticleUrlApiV1WechatMpWebFetchMpArticleUrlGet_8(sogouUrl: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResponseModel>> {
            const localVarAxiosArgs = await WeChatMediaPlatformWebAPIApiAxiosParamCreator(configuration).fetchMpArticleUrlApiV1WechatMpWebFetchMpArticleUrlGet_8(sogouUrl, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号长链接转短链接 ### 参数: - url: 文章链接 ### 返回: - 短链接  # [English] ### Purpose: - Get Wechat MP Long URL to Short URL ### Parameters: - url: Article URL ### Returns: - Short URL  # [示例/Example] url = \"http://mp.weixin.qq.com/s?__biz=MzIyMDQzMTM4Mg==&mid=2247504868&idx=1&sn=37ee48875df1be54cb766783177ce61d\"
         * @summary 获取微信公众号长链接转短链接/Get Wechat MP Long URL to Short URL
         * @param {string} url 文章链接/Article URL
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async fetchMpArticleUrlConversionApiV1WechatMpWebFetchMpArticleUrlConversionGet(url: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResponseModel>> {
            const localVarAxiosArgs = await WeChatMediaPlatformWebAPIApiAxiosParamCreator(configuration).fetchMpArticleUrlConversionApiV1WechatMpWebFetchMpArticleUrlConversionGet(url, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号长链接转短链接 ### 参数: - url: 文章链接 ### 返回: - 短链接  # [English] ### Purpose: - Get Wechat MP Long URL to Short URL ### Parameters: - url: Article URL ### Returns: - Short URL  # [示例/Example] url = \"http://mp.weixin.qq.com/s?__biz=MzIyMDQzMTM4Mg==&mid=2247504868&idx=1&sn=37ee48875df1be54cb766783177ce61d\"
         * @summary 获取微信公众号长链接转短链接/Get Wechat MP Long URL to Short URL
         * @param {string} url 文章链接/Article URL
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async fetchMpArticleUrlConversionApiV1WechatMpWebFetchMpArticleUrlConversionGet_9(url: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResponseModel>> {
            const localVarAxiosArgs = await WeChatMediaPlatformWebAPIApiAxiosParamCreator(configuration).fetchMpArticleUrlConversionApiV1WechatMpWebFetchMpArticleUrlConversionGet_9(url, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号关联文章 ### 参数: - url: 文章链接 ### 返回: - 关联文章  # [English] ### Purpose: - Get Wechat MP Related Articles ### Parameters: - url: Article URL ### Returns: - Related Articles  # [示例/Example] url = \"https://mp.weixin.qq.com/s/Ko5V9jw9kwL8TO6Q7J3UqQ\"
         * @summary 获取微信公众号关联文章/Get Wechat MP Related Articles
         * @param {string} url 文章链接/Article URL
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async fetchMpRelatedArticlesApiV1WechatMpWebFetchMpRelatedArticlesGet(url: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResponseModel>> {
            const localVarAxiosArgs = await WeChatMediaPlatformWebAPIApiAxiosParamCreator(configuration).fetchMpRelatedArticlesApiV1WechatMpWebFetchMpRelatedArticlesGet(url, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号关联文章 ### 参数: - url: 文章链接 ### 返回: - 关联文章  # [English] ### Purpose: - Get Wechat MP Related Articles ### Parameters: - url: Article URL ### Returns: - Related Articles  # [示例/Example] url = \"https://mp.weixin.qq.com/s/Ko5V9jw9kwL8TO6Q7J3UqQ\"
         * @summary 获取微信公众号关联文章/Get Wechat MP Related Articles
         * @param {string} url 文章链接/Article URL
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async fetchMpRelatedArticlesApiV1WechatMpWebFetchMpRelatedArticlesGet_10(url: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResponseModel>> {
            const localVarAxiosArgs = await WeChatMediaPlatformWebAPIApiAxiosParamCreator(configuration).fetchMpRelatedArticlesApiV1WechatMpWebFetchMpRelatedArticlesGet_10(url, options);
            return (axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
                const axiosRequestArgs = {...localVarAxiosArgs.options, url: basePath + localVarAxiosArgs.url};
                return axios.request(axiosRequestArgs);
            };
        },
    }
};

/**
 * WeChatMediaPlatformWebAPIApi - factory interface
 * @export
 */
export const WeChatMediaPlatformWebAPIApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    return {
        /**
         * # [中文] ### 用途: - 获取微信公众号广告 ### 参数: - url: 文章链接 ### 返回: - 广告  # [English] ### Purpose: - Get Wechat MP Article Ad ### Parameters: - url: Article URL ### Returns: - Ad  # [示例/Example] url = \"https://mp.weixin.qq.com/s/hrTDuwh0pWyJFYC93kKCrg\"
         * @summary 获取微信公众号广告/Get Wechat MP Article Ad
         * @param {string} url 文章链接/Article URL
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        fetchMpArticleAdApiV1WechatMpWebFetchMpArticleAdGet(url: string, options?: any): AxiosPromise<ResponseModel> {
            return WeChatMediaPlatformWebAPIApiFp(configuration).fetchMpArticleAdApiV1WechatMpWebFetchMpArticleAdGet(url, options).then((request) => request(axios, basePath));
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号广告 ### 参数: - url: 文章链接 ### 返回: - 广告  # [English] ### Purpose: - Get Wechat MP Article Ad ### Parameters: - url: Article URL ### Returns: - Ad  # [示例/Example] url = \"https://mp.weixin.qq.com/s/hrTDuwh0pWyJFYC93kKCrg\"
         * @summary 获取微信公众号广告/Get Wechat MP Article Ad
         * @param {string} url 文章链接/Article URL
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        fetchMpArticleAdApiV1WechatMpWebFetchMpArticleAdGet_1(url: string, options?: any): AxiosPromise<ResponseModel> {
            return WeChatMediaPlatformWebAPIApiFp(configuration).fetchMpArticleAdApiV1WechatMpWebFetchMpArticleAdGet_1(url, options).then((request) => request(axios, basePath));
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号文章评论列表 ### 参数: - url: 文章链接 - comment_id: 评论ID - offset: 偏移量 ### 返回: - 评论列表  # [English] ### Purpose: - Get Wechat MP Article Comment List ### Parameters: - url: Article URL - comment_id: Comment ID - offset: Offset ### Returns: - Comment List  # [示例/Example] url = \"https://mp.weixin.qq.com/s/Ko5V9jw9kwL8TO6Q7J3UqQ\" comment_id = \"\" offset = \"0\"
         * @summary 获取微信公众号文章评论列表/Get Wechat MP Article Comment List
         * @param {string} url 文章链接/Article URL
         * @param {string} [commentId] 评论ID/Comment ID
         * @param {string} [offset] 偏移量/Offset
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        fetchMpArticleCommentListApiV1WechatMpWebFetchMpArticleCommentListGet(url: string, commentId?: string, offset?: string, options?: any): AxiosPromise<ResponseModel> {
            return WeChatMediaPlatformWebAPIApiFp(configuration).fetchMpArticleCommentListApiV1WechatMpWebFetchMpArticleCommentListGet(url, commentId, offset, options).then((request) => request(axios, basePath));
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号文章评论列表 ### 参数: - url: 文章链接 - comment_id: 评论ID - offset: 偏移量 ### 返回: - 评论列表  # [English] ### Purpose: - Get Wechat MP Article Comment List ### Parameters: - url: Article URL - comment_id: Comment ID - offset: Offset ### Returns: - Comment List  # [示例/Example] url = \"https://mp.weixin.qq.com/s/Ko5V9jw9kwL8TO6Q7J3UqQ\" comment_id = \"\" offset = \"0\"
         * @summary 获取微信公众号文章评论列表/Get Wechat MP Article Comment List
         * @param {string} url 文章链接/Article URL
         * @param {string} [commentId] 评论ID/Comment ID
         * @param {string} [offset] 偏移量/Offset
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        fetchMpArticleCommentListApiV1WechatMpWebFetchMpArticleCommentListGet_2(url: string, commentId?: string, offset?: string, options?: any): AxiosPromise<ResponseModel> {
            return WeChatMediaPlatformWebAPIApiFp(configuration).fetchMpArticleCommentListApiV1WechatMpWebFetchMpArticleCommentListGet_2(url, commentId, offset, options).then((request) => request(axios, basePath));
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号文章评论回复列表 ### 参数: - url: 文章链接 - comment_id: 评论ID - content_id: 内容ID - offset: 偏移量 ### 返回: - 评论回复列表  # [English] ### Purpose: - Get Wechat MP Article Comment Reply List ### Parameters: - url: Article URL - comment_id: Comment ID - content_id: Content ID - offset: Offset ### Returns: - Comment Reply List  # [示例/Example] url = \"https://mp.weixin.qq.com/s/RCjkQlkRS4oKZ0GAT9slzA\" comment_id = \"3601466901697855492\" content_id = \"6387234930341970671\" offset = \"0\"
         * @summary 获取微信公众号文章评论回复列表/Get Wechat MP Article Comment Reply List
         * @param {string} commentId 评论ID/Comment ID
         * @param {string} contentId 内容ID/Content ID
         * @param {string} [url] 文章链接/Article URL
         * @param {string} [offset] 偏移量/Offset
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        fetchMpArticleCommentReplyListApiV1WechatMpWebFetchMpArticleCommentReplyListGet(commentId: string, contentId: string, url?: string, offset?: string, options?: any): AxiosPromise<ResponseModel> {
            return WeChatMediaPlatformWebAPIApiFp(configuration).fetchMpArticleCommentReplyListApiV1WechatMpWebFetchMpArticleCommentReplyListGet(commentId, contentId, url, offset, options).then((request) => request(axios, basePath));
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号文章评论回复列表 ### 参数: - url: 文章链接 - comment_id: 评论ID - content_id: 内容ID - offset: 偏移量 ### 返回: - 评论回复列表  # [English] ### Purpose: - Get Wechat MP Article Comment Reply List ### Parameters: - url: Article URL - comment_id: Comment ID - content_id: Content ID - offset: Offset ### Returns: - Comment Reply List  # [示例/Example] url = \"https://mp.weixin.qq.com/s/RCjkQlkRS4oKZ0GAT9slzA\" comment_id = \"3601466901697855492\" content_id = \"6387234930341970671\" offset = \"0\"
         * @summary 获取微信公众号文章评论回复列表/Get Wechat MP Article Comment Reply List
         * @param {string} commentId 评论ID/Comment ID
         * @param {string} contentId 内容ID/Content ID
         * @param {string} [url] 文章链接/Article URL
         * @param {string} [offset] 偏移量/Offset
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        fetchMpArticleCommentReplyListApiV1WechatMpWebFetchMpArticleCommentReplyListGet_3(commentId: string, contentId: string, url?: string, offset?: string, options?: any): AxiosPromise<ResponseModel> {
            return WeChatMediaPlatformWebAPIApiFp(configuration).fetchMpArticleCommentReplyListApiV1WechatMpWebFetchMpArticleCommentReplyListGet_3(commentId, contentId, url, offset, options).then((request) => request(axios, basePath));
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号文章详情的HTML，如果你需要获取详细的JSON格式数据，请使用`/api/v1/wechat_mp/web/fetch_mp_article_detail_json`接口 - 此接口收费贵，价格：0.01$/次 ### 参数: - url: 文章链接 ### 返回: - 文章详情的HTML  # [English] ### Purpose: - Get WeChat MP Article Detail, if you need detailed JSON format data, please use the `/api/v1/wechat_mp/web/fetch_mp_article_detail_json` interface - This interface is more expensive, price: 0.01$/time ### Parameters: - url: Article URL ### Returns: - Article Detail HTML  # [示例/Example] url = \"https://mp.weixin.qq.com/s/TSNQKkRpN1qbKsT7BvzqIw\"
         * @summary 获取微信公众号文章详情的HTML/Get Wechat MP Article Detail HTML
         * @param {string} url 文章链接/Article URL
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        fetchMpArticleDetailHtmlApiV1WechatMpWebFetchMpArticleDetailHtmlGet(url: string, options?: any): AxiosPromise<ResponseModel> {
            return WeChatMediaPlatformWebAPIApiFp(configuration).fetchMpArticleDetailHtmlApiV1WechatMpWebFetchMpArticleDetailHtmlGet(url, options).then((request) => request(axios, basePath));
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号文章详情的HTML，如果你需要获取详细的JSON格式数据，请使用`/api/v1/wechat_mp/web/fetch_mp_article_detail_json`接口 - 此接口收费贵，价格：0.01$/次 ### 参数: - url: 文章链接 ### 返回: - 文章详情的HTML  # [English] ### Purpose: - Get WeChat MP Article Detail, if you need detailed JSON format data, please use the `/api/v1/wechat_mp/web/fetch_mp_article_detail_json` interface - This interface is more expensive, price: 0.01$/time ### Parameters: - url: Article URL ### Returns: - Article Detail HTML  # [示例/Example] url = \"https://mp.weixin.qq.com/s/TSNQKkRpN1qbKsT7BvzqIw\"
         * @summary 获取微信公众号文章详情的HTML/Get Wechat MP Article Detail HTML
         * @param {string} url 文章链接/Article URL
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        fetchMpArticleDetailHtmlApiV1WechatMpWebFetchMpArticleDetailHtmlGet_4(url: string, options?: any): AxiosPromise<ResponseModel> {
            return WeChatMediaPlatformWebAPIApiFp(configuration).fetchMpArticleDetailHtmlApiV1WechatMpWebFetchMpArticleDetailHtmlGet_4(url, options).then((request) => request(axios, basePath));
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号文章详情的JSON格式数据 - 此接口收费便宜，如果你需要获取详细的HTML格式数据，请使用`/api/v1/wechat_mp/web/fetch_mp_article_detail_html`接口，但是此接口收费更贵。 - 价格：0.001$/次 ### 参数: - url: 文章链接 ### 返回: - 文章详情的HTML  # [English] ### Purpose: - Get WeChat MP Article Detail in JSON format - This interface is cheaper, if you need detailed HTML format data, please use the `/api/v1/wechat_mp/web/fetch_mp_article_detail_html` interface, but this interface is more expensive. - Price: 0.001$/time ### Parameters: - url: Article URL ### Returns: - Article Detail HTML  # [示例/Example] url = \"https://mp.weixin.qq.com/s/TSNQKkRpN1qbKsT7BvzqIw\"
         * @summary 获取微信公众号文章详情的JSON/Get Wechat MP Article Detail JSON
         * @param {string} url 文章链接/Article URL
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        fetchMpArticleDetailJsonApiV1WechatMpWebFetchMpArticleDetailJsonGet(url: string, options?: any): AxiosPromise<ResponseModel> {
            return WeChatMediaPlatformWebAPIApiFp(configuration).fetchMpArticleDetailJsonApiV1WechatMpWebFetchMpArticleDetailJsonGet(url, options).then((request) => request(axios, basePath));
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号文章详情的JSON格式数据 - 此接口收费便宜，如果你需要获取详细的HTML格式数据，请使用`/api/v1/wechat_mp/web/fetch_mp_article_detail_html`接口，但是此接口收费更贵。 - 价格：0.001$/次 ### 参数: - url: 文章链接 ### 返回: - 文章详情的HTML  # [English] ### Purpose: - Get WeChat MP Article Detail in JSON format - This interface is cheaper, if you need detailed HTML format data, please use the `/api/v1/wechat_mp/web/fetch_mp_article_detail_html` interface, but this interface is more expensive. - Price: 0.001$/time ### Parameters: - url: Article URL ### Returns: - Article Detail HTML  # [示例/Example] url = \"https://mp.weixin.qq.com/s/TSNQKkRpN1qbKsT7BvzqIw\"
         * @summary 获取微信公众号文章详情的JSON/Get Wechat MP Article Detail JSON
         * @param {string} url 文章链接/Article URL
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        fetchMpArticleDetailJsonApiV1WechatMpWebFetchMpArticleDetailJsonGet_5(url: string, options?: any): AxiosPromise<ResponseModel> {
            return WeChatMediaPlatformWebAPIApiFp(configuration).fetchMpArticleDetailJsonApiV1WechatMpWebFetchMpArticleDetailJsonGet_5(url, options).then((request) => request(axios, basePath));
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号文章列表 ### 参数: - ghid: 公众号ID - offset: 偏移量 ### 返回: - 文章列表  # [English] ### Purpose: - Get Wechat MP Article List ### Parameters: - ghid: MP ID - offset: Offset ### Returns: - Article List  # [示例/Example] ghid = \"gh_a3d35d4c9d3f\" offset = \"\"
         * @summary 获取微信公众号文章列表/Get Wechat MP Article List
         * @param {string} ghid 公众号ID/MP ID
         * @param {string} [offset] 偏移量/Offset
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        fetchMpArticleListApiV1WechatMpWebFetchMpArticleListGet(ghid: string, offset?: string, options?: any): AxiosPromise<ResponseModel> {
            return WeChatMediaPlatformWebAPIApiFp(configuration).fetchMpArticleListApiV1WechatMpWebFetchMpArticleListGet(ghid, offset, options).then((request) => request(axios, basePath));
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号文章列表 ### 参数: - ghid: 公众号ID - offset: 偏移量 ### 返回: - 文章列表  # [English] ### Purpose: - Get Wechat MP Article List ### Parameters: - ghid: MP ID - offset: Offset ### Returns: - Article List  # [示例/Example] ghid = \"gh_a3d35d4c9d3f\" offset = \"\"
         * @summary 获取微信公众号文章列表/Get Wechat MP Article List
         * @param {string} ghid 公众号ID/MP ID
         * @param {string} [offset] 偏移量/Offset
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        fetchMpArticleListApiV1WechatMpWebFetchMpArticleListGet_6(ghid: string, offset?: string, options?: any): AxiosPromise<ResponseModel> {
            return WeChatMediaPlatformWebAPIApiFp(configuration).fetchMpArticleListApiV1WechatMpWebFetchMpArticleListGet_6(ghid, offset, options).then((request) => request(axios, basePath));
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号文章阅读量 ### 参数: - url: 文章链接 - comment_id: 评论ID ### 返回: - 阅读量  # [English] ### Purpose: - Get Wechat MP Article Read Count ### Parameters: - url: Article URL - comment_id: Comment ID ### Returns: - Read Count  # [示例/Example] url = \"https://mp.weixin.qq.com/s/hrTDuwh0pWyJFYC93kKCrg\" comment_id = \"3363399664632332289\"
         * @summary 获取微信公众号文章阅读量/Get Wechat MP Article Read Count
         * @param {string} url 文章链接/Article URL
         * @param {string} commentId 评论ID/Comment ID
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        fetchMpArticleReadCountApiV1WechatMpWebFetchMpArticleReadCountGet(url: string, commentId: string, options?: any): AxiosPromise<ResponseModel> {
            return WeChatMediaPlatformWebAPIApiFp(configuration).fetchMpArticleReadCountApiV1WechatMpWebFetchMpArticleReadCountGet(url, commentId, options).then((request) => request(axios, basePath));
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号文章阅读量 ### 参数: - url: 文章链接 - comment_id: 评论ID ### 返回: - 阅读量  # [English] ### Purpose: - Get Wechat MP Article Read Count ### Parameters: - url: Article URL - comment_id: Comment ID ### Returns: - Read Count  # [示例/Example] url = \"https://mp.weixin.qq.com/s/hrTDuwh0pWyJFYC93kKCrg\" comment_id = \"3363399664632332289\"
         * @summary 获取微信公众号文章阅读量/Get Wechat MP Article Read Count
         * @param {string} url 文章链接/Article URL
         * @param {string} commentId 评论ID/Comment ID
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        fetchMpArticleReadCountApiV1WechatMpWebFetchMpArticleReadCountGet_7(url: string, commentId: string, options?: any): AxiosPromise<ResponseModel> {
            return WeChatMediaPlatformWebAPIApiFp(configuration).fetchMpArticleReadCountApiV1WechatMpWebFetchMpArticleReadCountGet_7(url, commentId, options).then((request) => request(axios, basePath));
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号文章永久链接 ### 参数: - sogou_url: 搜狗链接 ### 返回: - 永久链接  # [English] ### Purpose: - Get Wechat MP Article URL ### Parameters: - sogou_url: Sogou URL ### Returns: - Article URL  # [示例/Example] sogou_url = \"https://weixin.sogou.com/link?url=dn9a_-gY295K0Rci_xozVXfdMkSQTLW6cwJThYulHEtVjXrGTiVgS5mzcw64XRlRaPIdMgILsPEBI9djq3byAlqXa8Fplpd9bV3r44ewJj5IFttt-prmTSHShu8JtNlpDYR_z_1xvD2J_XrGTUriRYOOY2mt9pZSIUQEepUVTybxAOW4P5fEPd23R0CgK6W3KEODtIkcv1U5w5VkZ8a7_lyyAqreiCgr1YH9mz_7mzFDl6rX6ZnkVYNsUHV_OmaXBUCqpZ1Pa6YO8fIRwtipOg..&type=2&query=deepseek&token=C2E90D2050EB6EA5C2C4EDB1541D855FC322013E67C5DC5A&k=4&h=k\"
         * @summary 获取微信公众号文章永久链接/Get Wechat MP Article URL
         * @param {string} sogouUrl 搜狗链接/Sogou URL
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        fetchMpArticleUrlApiV1WechatMpWebFetchMpArticleUrlGet(sogouUrl: string, options?: any): AxiosPromise<ResponseModel> {
            return WeChatMediaPlatformWebAPIApiFp(configuration).fetchMpArticleUrlApiV1WechatMpWebFetchMpArticleUrlGet(sogouUrl, options).then((request) => request(axios, basePath));
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号文章永久链接 ### 参数: - sogou_url: 搜狗链接 ### 返回: - 永久链接  # [English] ### Purpose: - Get Wechat MP Article URL ### Parameters: - sogou_url: Sogou URL ### Returns: - Article URL  # [示例/Example] sogou_url = \"https://weixin.sogou.com/link?url=dn9a_-gY295K0Rci_xozVXfdMkSQTLW6cwJThYulHEtVjXrGTiVgS5mzcw64XRlRaPIdMgILsPEBI9djq3byAlqXa8Fplpd9bV3r44ewJj5IFttt-prmTSHShu8JtNlpDYR_z_1xvD2J_XrGTUriRYOOY2mt9pZSIUQEepUVTybxAOW4P5fEPd23R0CgK6W3KEODtIkcv1U5w5VkZ8a7_lyyAqreiCgr1YH9mz_7mzFDl6rX6ZnkVYNsUHV_OmaXBUCqpZ1Pa6YO8fIRwtipOg..&type=2&query=deepseek&token=C2E90D2050EB6EA5C2C4EDB1541D855FC322013E67C5DC5A&k=4&h=k\"
         * @summary 获取微信公众号文章永久链接/Get Wechat MP Article URL
         * @param {string} sogouUrl 搜狗链接/Sogou URL
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        fetchMpArticleUrlApiV1WechatMpWebFetchMpArticleUrlGet_8(sogouUrl: string, options?: any): AxiosPromise<ResponseModel> {
            return WeChatMediaPlatformWebAPIApiFp(configuration).fetchMpArticleUrlApiV1WechatMpWebFetchMpArticleUrlGet_8(sogouUrl, options).then((request) => request(axios, basePath));
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号长链接转短链接 ### 参数: - url: 文章链接 ### 返回: - 短链接  # [English] ### Purpose: - Get Wechat MP Long URL to Short URL ### Parameters: - url: Article URL ### Returns: - Short URL  # [示例/Example] url = \"http://mp.weixin.qq.com/s?__biz=MzIyMDQzMTM4Mg==&mid=2247504868&idx=1&sn=37ee48875df1be54cb766783177ce61d\"
         * @summary 获取微信公众号长链接转短链接/Get Wechat MP Long URL to Short URL
         * @param {string} url 文章链接/Article URL
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        fetchMpArticleUrlConversionApiV1WechatMpWebFetchMpArticleUrlConversionGet(url: string, options?: any): AxiosPromise<ResponseModel> {
            return WeChatMediaPlatformWebAPIApiFp(configuration).fetchMpArticleUrlConversionApiV1WechatMpWebFetchMpArticleUrlConversionGet(url, options).then((request) => request(axios, basePath));
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号长链接转短链接 ### 参数: - url: 文章链接 ### 返回: - 短链接  # [English] ### Purpose: - Get Wechat MP Long URL to Short URL ### Parameters: - url: Article URL ### Returns: - Short URL  # [示例/Example] url = \"http://mp.weixin.qq.com/s?__biz=MzIyMDQzMTM4Mg==&mid=2247504868&idx=1&sn=37ee48875df1be54cb766783177ce61d\"
         * @summary 获取微信公众号长链接转短链接/Get Wechat MP Long URL to Short URL
         * @param {string} url 文章链接/Article URL
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        fetchMpArticleUrlConversionApiV1WechatMpWebFetchMpArticleUrlConversionGet_9(url: string, options?: any): AxiosPromise<ResponseModel> {
            return WeChatMediaPlatformWebAPIApiFp(configuration).fetchMpArticleUrlConversionApiV1WechatMpWebFetchMpArticleUrlConversionGet_9(url, options).then((request) => request(axios, basePath));
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号关联文章 ### 参数: - url: 文章链接 ### 返回: - 关联文章  # [English] ### Purpose: - Get Wechat MP Related Articles ### Parameters: - url: Article URL ### Returns: - Related Articles  # [示例/Example] url = \"https://mp.weixin.qq.com/s/Ko5V9jw9kwL8TO6Q7J3UqQ\"
         * @summary 获取微信公众号关联文章/Get Wechat MP Related Articles
         * @param {string} url 文章链接/Article URL
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        fetchMpRelatedArticlesApiV1WechatMpWebFetchMpRelatedArticlesGet(url: string, options?: any): AxiosPromise<ResponseModel> {
            return WeChatMediaPlatformWebAPIApiFp(configuration).fetchMpRelatedArticlesApiV1WechatMpWebFetchMpRelatedArticlesGet(url, options).then((request) => request(axios, basePath));
        },
        /**
         * # [中文] ### 用途: - 获取微信公众号关联文章 ### 参数: - url: 文章链接 ### 返回: - 关联文章  # [English] ### Purpose: - Get Wechat MP Related Articles ### Parameters: - url: Article URL ### Returns: - Related Articles  # [示例/Example] url = \"https://mp.weixin.qq.com/s/Ko5V9jw9kwL8TO6Q7J3UqQ\"
         * @summary 获取微信公众号关联文章/Get Wechat MP Related Articles
         * @param {string} url 文章链接/Article URL
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        fetchMpRelatedArticlesApiV1WechatMpWebFetchMpRelatedArticlesGet_10(url: string, options?: any): AxiosPromise<ResponseModel> {
            return WeChatMediaPlatformWebAPIApiFp(configuration).fetchMpRelatedArticlesApiV1WechatMpWebFetchMpRelatedArticlesGet_10(url, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * WeChatMediaPlatformWebAPIApi - interface
 * @export
 * @interface WeChatMediaPlatformWebAPIApi
 */
export interface WeChatMediaPlatformWebAPIApiInterface {
    /**
     * # [中文] ### 用途: - 获取微信公众号广告 ### 参数: - url: 文章链接 ### 返回: - 广告  # [English] ### Purpose: - Get Wechat MP Article Ad ### Parameters: - url: Article URL ### Returns: - Ad  # [示例/Example] url = \"https://mp.weixin.qq.com/s/hrTDuwh0pWyJFYC93kKCrg\"
     * @summary 获取微信公众号广告/Get Wechat MP Article Ad
     * @param {string} url 文章链接/Article URL
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeChatMediaPlatformWebAPIApiInterface
     */
    fetchMpArticleAdApiV1WechatMpWebFetchMpArticleAdGet(url: string, options?: any): AxiosPromise<ResponseModel>;

    /**
     * # [中文] ### 用途: - 获取微信公众号广告 ### 参数: - url: 文章链接 ### 返回: - 广告  # [English] ### Purpose: - Get Wechat MP Article Ad ### Parameters: - url: Article URL ### Returns: - Ad  # [示例/Example] url = \"https://mp.weixin.qq.com/s/hrTDuwh0pWyJFYC93kKCrg\"
     * @summary 获取微信公众号广告/Get Wechat MP Article Ad
     * @param {string} url 文章链接/Article URL
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeChatMediaPlatformWebAPIApiInterface
     */
    fetchMpArticleAdApiV1WechatMpWebFetchMpArticleAdGet_1(url: string, options?: any): AxiosPromise<ResponseModel>;

    /**
     * # [中文] ### 用途: - 获取微信公众号文章评论列表 ### 参数: - url: 文章链接 - comment_id: 评论ID - offset: 偏移量 ### 返回: - 评论列表  # [English] ### Purpose: - Get Wechat MP Article Comment List ### Parameters: - url: Article URL - comment_id: Comment ID - offset: Offset ### Returns: - Comment List  # [示例/Example] url = \"https://mp.weixin.qq.com/s/Ko5V9jw9kwL8TO6Q7J3UqQ\" comment_id = \"\" offset = \"0\"
     * @summary 获取微信公众号文章评论列表/Get Wechat MP Article Comment List
     * @param {string} url 文章链接/Article URL
     * @param {string} [commentId] 评论ID/Comment ID
     * @param {string} [offset] 偏移量/Offset
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeChatMediaPlatformWebAPIApiInterface
     */
    fetchMpArticleCommentListApiV1WechatMpWebFetchMpArticleCommentListGet(url: string, commentId?: string, offset?: string, options?: any): AxiosPromise<ResponseModel>;

    /**
     * # [中文] ### 用途: - 获取微信公众号文章评论列表 ### 参数: - url: 文章链接 - comment_id: 评论ID - offset: 偏移量 ### 返回: - 评论列表  # [English] ### Purpose: - Get Wechat MP Article Comment List ### Parameters: - url: Article URL - comment_id: Comment ID - offset: Offset ### Returns: - Comment List  # [示例/Example] url = \"https://mp.weixin.qq.com/s/Ko5V9jw9kwL8TO6Q7J3UqQ\" comment_id = \"\" offset = \"0\"
     * @summary 获取微信公众号文章评论列表/Get Wechat MP Article Comment List
     * @param {string} url 文章链接/Article URL
     * @param {string} [commentId] 评论ID/Comment ID
     * @param {string} [offset] 偏移量/Offset
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeChatMediaPlatformWebAPIApiInterface
     */
    fetchMpArticleCommentListApiV1WechatMpWebFetchMpArticleCommentListGet_2(url: string, commentId?: string, offset?: string, options?: any): AxiosPromise<ResponseModel>;

    /**
     * # [中文] ### 用途: - 获取微信公众号文章评论回复列表 ### 参数: - url: 文章链接 - comment_id: 评论ID - content_id: 内容ID - offset: 偏移量 ### 返回: - 评论回复列表  # [English] ### Purpose: - Get Wechat MP Article Comment Reply List ### Parameters: - url: Article URL - comment_id: Comment ID - content_id: Content ID - offset: Offset ### Returns: - Comment Reply List  # [示例/Example] url = \"https://mp.weixin.qq.com/s/RCjkQlkRS4oKZ0GAT9slzA\" comment_id = \"3601466901697855492\" content_id = \"6387234930341970671\" offset = \"0\"
     * @summary 获取微信公众号文章评论回复列表/Get Wechat MP Article Comment Reply List
     * @param {string} commentId 评论ID/Comment ID
     * @param {string} contentId 内容ID/Content ID
     * @param {string} [url] 文章链接/Article URL
     * @param {string} [offset] 偏移量/Offset
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeChatMediaPlatformWebAPIApiInterface
     */
    fetchMpArticleCommentReplyListApiV1WechatMpWebFetchMpArticleCommentReplyListGet(commentId: string, contentId: string, url?: string, offset?: string, options?: any): AxiosPromise<ResponseModel>;

    /**
     * # [中文] ### 用途: - 获取微信公众号文章评论回复列表 ### 参数: - url: 文章链接 - comment_id: 评论ID - content_id: 内容ID - offset: 偏移量 ### 返回: - 评论回复列表  # [English] ### Purpose: - Get Wechat MP Article Comment Reply List ### Parameters: - url: Article URL - comment_id: Comment ID - content_id: Content ID - offset: Offset ### Returns: - Comment Reply List  # [示例/Example] url = \"https://mp.weixin.qq.com/s/RCjkQlkRS4oKZ0GAT9slzA\" comment_id = \"3601466901697855492\" content_id = \"6387234930341970671\" offset = \"0\"
     * @summary 获取微信公众号文章评论回复列表/Get Wechat MP Article Comment Reply List
     * @param {string} commentId 评论ID/Comment ID
     * @param {string} contentId 内容ID/Content ID
     * @param {string} [url] 文章链接/Article URL
     * @param {string} [offset] 偏移量/Offset
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeChatMediaPlatformWebAPIApiInterface
     */
    fetchMpArticleCommentReplyListApiV1WechatMpWebFetchMpArticleCommentReplyListGet_3(commentId: string, contentId: string, url?: string, offset?: string, options?: any): AxiosPromise<ResponseModel>;

    /**
     * # [中文] ### 用途: - 获取微信公众号文章详情的HTML，如果你需要获取详细的JSON格式数据，请使用`/api/v1/wechat_mp/web/fetch_mp_article_detail_json`接口 - 此接口收费贵，价格：0.01$/次 ### 参数: - url: 文章链接 ### 返回: - 文章详情的HTML  # [English] ### Purpose: - Get WeChat MP Article Detail, if you need detailed JSON format data, please use the `/api/v1/wechat_mp/web/fetch_mp_article_detail_json` interface - This interface is more expensive, price: 0.01$/time ### Parameters: - url: Article URL ### Returns: - Article Detail HTML  # [示例/Example] url = \"https://mp.weixin.qq.com/s/TSNQKkRpN1qbKsT7BvzqIw\"
     * @summary 获取微信公众号文章详情的HTML/Get Wechat MP Article Detail HTML
     * @param {string} url 文章链接/Article URL
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeChatMediaPlatformWebAPIApiInterface
     */
    fetchMpArticleDetailHtmlApiV1WechatMpWebFetchMpArticleDetailHtmlGet(url: string, options?: any): AxiosPromise<ResponseModel>;

    /**
     * # [中文] ### 用途: - 获取微信公众号文章详情的HTML，如果你需要获取详细的JSON格式数据，请使用`/api/v1/wechat_mp/web/fetch_mp_article_detail_json`接口 - 此接口收费贵，价格：0.01$/次 ### 参数: - url: 文章链接 ### 返回: - 文章详情的HTML  # [English] ### Purpose: - Get WeChat MP Article Detail, if you need detailed JSON format data, please use the `/api/v1/wechat_mp/web/fetch_mp_article_detail_json` interface - This interface is more expensive, price: 0.01$/time ### Parameters: - url: Article URL ### Returns: - Article Detail HTML  # [示例/Example] url = \"https://mp.weixin.qq.com/s/TSNQKkRpN1qbKsT7BvzqIw\"
     * @summary 获取微信公众号文章详情的HTML/Get Wechat MP Article Detail HTML
     * @param {string} url 文章链接/Article URL
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeChatMediaPlatformWebAPIApiInterface
     */
    fetchMpArticleDetailHtmlApiV1WechatMpWebFetchMpArticleDetailHtmlGet_4(url: string, options?: any): AxiosPromise<ResponseModel>;

    /**
     * # [中文] ### 用途: - 获取微信公众号文章详情的JSON格式数据 - 此接口收费便宜，如果你需要获取详细的HTML格式数据，请使用`/api/v1/wechat_mp/web/fetch_mp_article_detail_html`接口，但是此接口收费更贵。 - 价格：0.001$/次 ### 参数: - url: 文章链接 ### 返回: - 文章详情的HTML  # [English] ### Purpose: - Get WeChat MP Article Detail in JSON format - This interface is cheaper, if you need detailed HTML format data, please use the `/api/v1/wechat_mp/web/fetch_mp_article_detail_html` interface, but this interface is more expensive. - Price: 0.001$/time ### Parameters: - url: Article URL ### Returns: - Article Detail HTML  # [示例/Example] url = \"https://mp.weixin.qq.com/s/TSNQKkRpN1qbKsT7BvzqIw\"
     * @summary 获取微信公众号文章详情的JSON/Get Wechat MP Article Detail JSON
     * @param {string} url 文章链接/Article URL
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeChatMediaPlatformWebAPIApiInterface
     */
    fetchMpArticleDetailJsonApiV1WechatMpWebFetchMpArticleDetailJsonGet(url: string, options?: any): AxiosPromise<ResponseModel>;

    /**
     * # [中文] ### 用途: - 获取微信公众号文章详情的JSON格式数据 - 此接口收费便宜，如果你需要获取详细的HTML格式数据，请使用`/api/v1/wechat_mp/web/fetch_mp_article_detail_html`接口，但是此接口收费更贵。 - 价格：0.001$/次 ### 参数: - url: 文章链接 ### 返回: - 文章详情的HTML  # [English] ### Purpose: - Get WeChat MP Article Detail in JSON format - This interface is cheaper, if you need detailed HTML format data, please use the `/api/v1/wechat_mp/web/fetch_mp_article_detail_html` interface, but this interface is more expensive. - Price: 0.001$/time ### Parameters: - url: Article URL ### Returns: - Article Detail HTML  # [示例/Example] url = \"https://mp.weixin.qq.com/s/TSNQKkRpN1qbKsT7BvzqIw\"
     * @summary 获取微信公众号文章详情的JSON/Get Wechat MP Article Detail JSON
     * @param {string} url 文章链接/Article URL
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeChatMediaPlatformWebAPIApiInterface
     */
    fetchMpArticleDetailJsonApiV1WechatMpWebFetchMpArticleDetailJsonGet_5(url: string, options?: any): AxiosPromise<ResponseModel>;

    /**
     * # [中文] ### 用途: - 获取微信公众号文章列表 ### 参数: - ghid: 公众号ID - offset: 偏移量 ### 返回: - 文章列表  # [English] ### Purpose: - Get Wechat MP Article List ### Parameters: - ghid: MP ID - offset: Offset ### Returns: - Article List  # [示例/Example] ghid = \"gh_a3d35d4c9d3f\" offset = \"\"
     * @summary 获取微信公众号文章列表/Get Wechat MP Article List
     * @param {string} ghid 公众号ID/MP ID
     * @param {string} [offset] 偏移量/Offset
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeChatMediaPlatformWebAPIApiInterface
     */
    fetchMpArticleListApiV1WechatMpWebFetchMpArticleListGet(ghid: string, offset?: string, options?: any): AxiosPromise<ResponseModel>;

    /**
     * # [中文] ### 用途: - 获取微信公众号文章列表 ### 参数: - ghid: 公众号ID - offset: 偏移量 ### 返回: - 文章列表  # [English] ### Purpose: - Get Wechat MP Article List ### Parameters: - ghid: MP ID - offset: Offset ### Returns: - Article List  # [示例/Example] ghid = \"gh_a3d35d4c9d3f\" offset = \"\"
     * @summary 获取微信公众号文章列表/Get Wechat MP Article List
     * @param {string} ghid 公众号ID/MP ID
     * @param {string} [offset] 偏移量/Offset
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeChatMediaPlatformWebAPIApiInterface
     */
    fetchMpArticleListApiV1WechatMpWebFetchMpArticleListGet_6(ghid: string, offset?: string, options?: any): AxiosPromise<ResponseModel>;

    /**
     * # [中文] ### 用途: - 获取微信公众号文章阅读量 ### 参数: - url: 文章链接 - comment_id: 评论ID ### 返回: - 阅读量  # [English] ### Purpose: - Get Wechat MP Article Read Count ### Parameters: - url: Article URL - comment_id: Comment ID ### Returns: - Read Count  # [示例/Example] url = \"https://mp.weixin.qq.com/s/hrTDuwh0pWyJFYC93kKCrg\" comment_id = \"3363399664632332289\"
     * @summary 获取微信公众号文章阅读量/Get Wechat MP Article Read Count
     * @param {string} url 文章链接/Article URL
     * @param {string} commentId 评论ID/Comment ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeChatMediaPlatformWebAPIApiInterface
     */
    fetchMpArticleReadCountApiV1WechatMpWebFetchMpArticleReadCountGet(url: string, commentId: string, options?: any): AxiosPromise<ResponseModel>;

    /**
     * # [中文] ### 用途: - 获取微信公众号文章阅读量 ### 参数: - url: 文章链接 - comment_id: 评论ID ### 返回: - 阅读量  # [English] ### Purpose: - Get Wechat MP Article Read Count ### Parameters: - url: Article URL - comment_id: Comment ID ### Returns: - Read Count  # [示例/Example] url = \"https://mp.weixin.qq.com/s/hrTDuwh0pWyJFYC93kKCrg\" comment_id = \"3363399664632332289\"
     * @summary 获取微信公众号文章阅读量/Get Wechat MP Article Read Count
     * @param {string} url 文章链接/Article URL
     * @param {string} commentId 评论ID/Comment ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeChatMediaPlatformWebAPIApiInterface
     */
    fetchMpArticleReadCountApiV1WechatMpWebFetchMpArticleReadCountGet_7(url: string, commentId: string, options?: any): AxiosPromise<ResponseModel>;

    /**
     * # [中文] ### 用途: - 获取微信公众号文章永久链接 ### 参数: - sogou_url: 搜狗链接 ### 返回: - 永久链接  # [English] ### Purpose: - Get Wechat MP Article URL ### Parameters: - sogou_url: Sogou URL ### Returns: - Article URL  # [示例/Example] sogou_url = \"https://weixin.sogou.com/link?url=dn9a_-gY295K0Rci_xozVXfdMkSQTLW6cwJThYulHEtVjXrGTiVgS5mzcw64XRlRaPIdMgILsPEBI9djq3byAlqXa8Fplpd9bV3r44ewJj5IFttt-prmTSHShu8JtNlpDYR_z_1xvD2J_XrGTUriRYOOY2mt9pZSIUQEepUVTybxAOW4P5fEPd23R0CgK6W3KEODtIkcv1U5w5VkZ8a7_lyyAqreiCgr1YH9mz_7mzFDl6rX6ZnkVYNsUHV_OmaXBUCqpZ1Pa6YO8fIRwtipOg..&type=2&query=deepseek&token=C2E90D2050EB6EA5C2C4EDB1541D855FC322013E67C5DC5A&k=4&h=k\"
     * @summary 获取微信公众号文章永久链接/Get Wechat MP Article URL
     * @param {string} sogouUrl 搜狗链接/Sogou URL
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeChatMediaPlatformWebAPIApiInterface
     */
    fetchMpArticleUrlApiV1WechatMpWebFetchMpArticleUrlGet(sogouUrl: string, options?: any): AxiosPromise<ResponseModel>;

    /**
     * # [中文] ### 用途: - 获取微信公众号文章永久链接 ### 参数: - sogou_url: 搜狗链接 ### 返回: - 永久链接  # [English] ### Purpose: - Get Wechat MP Article URL ### Parameters: - sogou_url: Sogou URL ### Returns: - Article URL  # [示例/Example] sogou_url = \"https://weixin.sogou.com/link?url=dn9a_-gY295K0Rci_xozVXfdMkSQTLW6cwJThYulHEtVjXrGTiVgS5mzcw64XRlRaPIdMgILsPEBI9djq3byAlqXa8Fplpd9bV3r44ewJj5IFttt-prmTSHShu8JtNlpDYR_z_1xvD2J_XrGTUriRYOOY2mt9pZSIUQEepUVTybxAOW4P5fEPd23R0CgK6W3KEODtIkcv1U5w5VkZ8a7_lyyAqreiCgr1YH9mz_7mzFDl6rX6ZnkVYNsUHV_OmaXBUCqpZ1Pa6YO8fIRwtipOg..&type=2&query=deepseek&token=C2E90D2050EB6EA5C2C4EDB1541D855FC322013E67C5DC5A&k=4&h=k\"
     * @summary 获取微信公众号文章永久链接/Get Wechat MP Article URL
     * @param {string} sogouUrl 搜狗链接/Sogou URL
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeChatMediaPlatformWebAPIApiInterface
     */
    fetchMpArticleUrlApiV1WechatMpWebFetchMpArticleUrlGet_8(sogouUrl: string, options?: any): AxiosPromise<ResponseModel>;

    /**
     * # [中文] ### 用途: - 获取微信公众号长链接转短链接 ### 参数: - url: 文章链接 ### 返回: - 短链接  # [English] ### Purpose: - Get Wechat MP Long URL to Short URL ### Parameters: - url: Article URL ### Returns: - Short URL  # [示例/Example] url = \"http://mp.weixin.qq.com/s?__biz=MzIyMDQzMTM4Mg==&mid=2247504868&idx=1&sn=37ee48875df1be54cb766783177ce61d\"
     * @summary 获取微信公众号长链接转短链接/Get Wechat MP Long URL to Short URL
     * @param {string} url 文章链接/Article URL
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeChatMediaPlatformWebAPIApiInterface
     */
    fetchMpArticleUrlConversionApiV1WechatMpWebFetchMpArticleUrlConversionGet(url: string, options?: any): AxiosPromise<ResponseModel>;

    /**
     * # [中文] ### 用途: - 获取微信公众号长链接转短链接 ### 参数: - url: 文章链接 ### 返回: - 短链接  # [English] ### Purpose: - Get Wechat MP Long URL to Short URL ### Parameters: - url: Article URL ### Returns: - Short URL  # [示例/Example] url = \"http://mp.weixin.qq.com/s?__biz=MzIyMDQzMTM4Mg==&mid=2247504868&idx=1&sn=37ee48875df1be54cb766783177ce61d\"
     * @summary 获取微信公众号长链接转短链接/Get Wechat MP Long URL to Short URL
     * @param {string} url 文章链接/Article URL
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeChatMediaPlatformWebAPIApiInterface
     */
    fetchMpArticleUrlConversionApiV1WechatMpWebFetchMpArticleUrlConversionGet_9(url: string, options?: any): AxiosPromise<ResponseModel>;

    /**
     * # [中文] ### 用途: - 获取微信公众号关联文章 ### 参数: - url: 文章链接 ### 返回: - 关联文章  # [English] ### Purpose: - Get Wechat MP Related Articles ### Parameters: - url: Article URL ### Returns: - Related Articles  # [示例/Example] url = \"https://mp.weixin.qq.com/s/Ko5V9jw9kwL8TO6Q7J3UqQ\"
     * @summary 获取微信公众号关联文章/Get Wechat MP Related Articles
     * @param {string} url 文章链接/Article URL
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeChatMediaPlatformWebAPIApiInterface
     */
    fetchMpRelatedArticlesApiV1WechatMpWebFetchMpRelatedArticlesGet(url: string, options?: any): AxiosPromise<ResponseModel>;

    /**
     * # [中文] ### 用途: - 获取微信公众号关联文章 ### 参数: - url: 文章链接 ### 返回: - 关联文章  # [English] ### Purpose: - Get Wechat MP Related Articles ### Parameters: - url: Article URL ### Returns: - Related Articles  # [示例/Example] url = \"https://mp.weixin.qq.com/s/Ko5V9jw9kwL8TO6Q7J3UqQ\"
     * @summary 获取微信公众号关联文章/Get Wechat MP Related Articles
     * @param {string} url 文章链接/Article URL
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeChatMediaPlatformWebAPIApiInterface
     */
    fetchMpRelatedArticlesApiV1WechatMpWebFetchMpRelatedArticlesGet_10(url: string, options?: any): AxiosPromise<ResponseModel>;

}

/**
 * WeChatMediaPlatformWebAPIApi - object-oriented interface
 * @export
 * @class WeChatMediaPlatformWebAPIApi
 * @extends {BaseAPI}
 */
export class WeChatMediaPlatformWebAPIApi extends BaseAPI implements WeChatMediaPlatformWebAPIApiInterface {
    /**
     * # [中文] ### 用途: - 获取微信公众号广告 ### 参数: - url: 文章链接 ### 返回: - 广告  # [English] ### Purpose: - Get Wechat MP Article Ad ### Parameters: - url: Article URL ### Returns: - Ad  # [示例/Example] url = \"https://mp.weixin.qq.com/s/hrTDuwh0pWyJFYC93kKCrg\"
     * @summary 获取微信公众号广告/Get Wechat MP Article Ad
     * @param {string} url 文章链接/Article URL
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeChatMediaPlatformWebAPIApi
     */
    public fetchMpArticleAdApiV1WechatMpWebFetchMpArticleAdGet(url: string, options?: any) {
        return WeChatMediaPlatformWebAPIApiFp(this.configuration).fetchMpArticleAdApiV1WechatMpWebFetchMpArticleAdGet(url, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * # [中文] ### 用途: - 获取微信公众号广告 ### 参数: - url: 文章链接 ### 返回: - 广告  # [English] ### Purpose: - Get Wechat MP Article Ad ### Parameters: - url: Article URL ### Returns: - Ad  # [示例/Example] url = \"https://mp.weixin.qq.com/s/hrTDuwh0pWyJFYC93kKCrg\"
     * @summary 获取微信公众号广告/Get Wechat MP Article Ad
     * @param {string} url 文章链接/Article URL
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeChatMediaPlatformWebAPIApi
     */
    public fetchMpArticleAdApiV1WechatMpWebFetchMpArticleAdGet_1(url: string, options?: any) {
        return WeChatMediaPlatformWebAPIApiFp(this.configuration).fetchMpArticleAdApiV1WechatMpWebFetchMpArticleAdGet_1(url, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * # [中文] ### 用途: - 获取微信公众号文章评论列表 ### 参数: - url: 文章链接 - comment_id: 评论ID - offset: 偏移量 ### 返回: - 评论列表  # [English] ### Purpose: - Get Wechat MP Article Comment List ### Parameters: - url: Article URL - comment_id: Comment ID - offset: Offset ### Returns: - Comment List  # [示例/Example] url = \"https://mp.weixin.qq.com/s/Ko5V9jw9kwL8TO6Q7J3UqQ\" comment_id = \"\" offset = \"0\"
     * @summary 获取微信公众号文章评论列表/Get Wechat MP Article Comment List
     * @param {string} url 文章链接/Article URL
     * @param {string} [commentId] 评论ID/Comment ID
     * @param {string} [offset] 偏移量/Offset
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeChatMediaPlatformWebAPIApi
     */
    public fetchMpArticleCommentListApiV1WechatMpWebFetchMpArticleCommentListGet(url: string, commentId?: string, offset?: string, options?: any) {
        return WeChatMediaPlatformWebAPIApiFp(this.configuration).fetchMpArticleCommentListApiV1WechatMpWebFetchMpArticleCommentListGet(url, commentId, offset, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * # [中文] ### 用途: - 获取微信公众号文章评论列表 ### 参数: - url: 文章链接 - comment_id: 评论ID - offset: 偏移量 ### 返回: - 评论列表  # [English] ### Purpose: - Get Wechat MP Article Comment List ### Parameters: - url: Article URL - comment_id: Comment ID - offset: Offset ### Returns: - Comment List  # [示例/Example] url = \"https://mp.weixin.qq.com/s/Ko5V9jw9kwL8TO6Q7J3UqQ\" comment_id = \"\" offset = \"0\"
     * @summary 获取微信公众号文章评论列表/Get Wechat MP Article Comment List
     * @param {string} url 文章链接/Article URL
     * @param {string} [commentId] 评论ID/Comment ID
     * @param {string} [offset] 偏移量/Offset
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeChatMediaPlatformWebAPIApi
     */
    public fetchMpArticleCommentListApiV1WechatMpWebFetchMpArticleCommentListGet_2(url: string, commentId?: string, offset?: string, options?: any) {
        return WeChatMediaPlatformWebAPIApiFp(this.configuration).fetchMpArticleCommentListApiV1WechatMpWebFetchMpArticleCommentListGet_2(url, commentId, offset, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * # [中文] ### 用途: - 获取微信公众号文章评论回复列表 ### 参数: - url: 文章链接 - comment_id: 评论ID - content_id: 内容ID - offset: 偏移量 ### 返回: - 评论回复列表  # [English] ### Purpose: - Get Wechat MP Article Comment Reply List ### Parameters: - url: Article URL - comment_id: Comment ID - content_id: Content ID - offset: Offset ### Returns: - Comment Reply List  # [示例/Example] url = \"https://mp.weixin.qq.com/s/RCjkQlkRS4oKZ0GAT9slzA\" comment_id = \"3601466901697855492\" content_id = \"6387234930341970671\" offset = \"0\"
     * @summary 获取微信公众号文章评论回复列表/Get Wechat MP Article Comment Reply List
     * @param {string} commentId 评论ID/Comment ID
     * @param {string} contentId 内容ID/Content ID
     * @param {string} [url] 文章链接/Article URL
     * @param {string} [offset] 偏移量/Offset
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeChatMediaPlatformWebAPIApi
     */
    public fetchMpArticleCommentReplyListApiV1WechatMpWebFetchMpArticleCommentReplyListGet(commentId: string, contentId: string, url?: string, offset?: string, options?: any) {
        return WeChatMediaPlatformWebAPIApiFp(this.configuration).fetchMpArticleCommentReplyListApiV1WechatMpWebFetchMpArticleCommentReplyListGet(commentId, contentId, url, offset, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * # [中文] ### 用途: - 获取微信公众号文章评论回复列表 ### 参数: - url: 文章链接 - comment_id: 评论ID - content_id: 内容ID - offset: 偏移量 ### 返回: - 评论回复列表  # [English] ### Purpose: - Get Wechat MP Article Comment Reply List ### Parameters: - url: Article URL - comment_id: Comment ID - content_id: Content ID - offset: Offset ### Returns: - Comment Reply List  # [示例/Example] url = \"https://mp.weixin.qq.com/s/RCjkQlkRS4oKZ0GAT9slzA\" comment_id = \"3601466901697855492\" content_id = \"6387234930341970671\" offset = \"0\"
     * @summary 获取微信公众号文章评论回复列表/Get Wechat MP Article Comment Reply List
     * @param {string} commentId 评论ID/Comment ID
     * @param {string} contentId 内容ID/Content ID
     * @param {string} [url] 文章链接/Article URL
     * @param {string} [offset] 偏移量/Offset
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeChatMediaPlatformWebAPIApi
     */
    public fetchMpArticleCommentReplyListApiV1WechatMpWebFetchMpArticleCommentReplyListGet_3(commentId: string, contentId: string, url?: string, offset?: string, options?: any) {
        return WeChatMediaPlatformWebAPIApiFp(this.configuration).fetchMpArticleCommentReplyListApiV1WechatMpWebFetchMpArticleCommentReplyListGet_3(commentId, contentId, url, offset, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * # [中文] ### 用途: - 获取微信公众号文章详情的HTML，如果你需要获取详细的JSON格式数据，请使用`/api/v1/wechat_mp/web/fetch_mp_article_detail_json`接口 - 此接口收费贵，价格：0.01$/次 ### 参数: - url: 文章链接 ### 返回: - 文章详情的HTML  # [English] ### Purpose: - Get WeChat MP Article Detail, if you need detailed JSON format data, please use the `/api/v1/wechat_mp/web/fetch_mp_article_detail_json` interface - This interface is more expensive, price: 0.01$/time ### Parameters: - url: Article URL ### Returns: - Article Detail HTML  # [示例/Example] url = \"https://mp.weixin.qq.com/s/TSNQKkRpN1qbKsT7BvzqIw\"
     * @summary 获取微信公众号文章详情的HTML/Get Wechat MP Article Detail HTML
     * @param {string} url 文章链接/Article URL
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeChatMediaPlatformWebAPIApi
     */
    public fetchMpArticleDetailHtmlApiV1WechatMpWebFetchMpArticleDetailHtmlGet(url: string, options?: any) {
        return WeChatMediaPlatformWebAPIApiFp(this.configuration).fetchMpArticleDetailHtmlApiV1WechatMpWebFetchMpArticleDetailHtmlGet(url, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * # [中文] ### 用途: - 获取微信公众号文章详情的HTML，如果你需要获取详细的JSON格式数据，请使用`/api/v1/wechat_mp/web/fetch_mp_article_detail_json`接口 - 此接口收费贵，价格：0.01$/次 ### 参数: - url: 文章链接 ### 返回: - 文章详情的HTML  # [English] ### Purpose: - Get WeChat MP Article Detail, if you need detailed JSON format data, please use the `/api/v1/wechat_mp/web/fetch_mp_article_detail_json` interface - This interface is more expensive, price: 0.01$/time ### Parameters: - url: Article URL ### Returns: - Article Detail HTML  # [示例/Example] url = \"https://mp.weixin.qq.com/s/TSNQKkRpN1qbKsT7BvzqIw\"
     * @summary 获取微信公众号文章详情的HTML/Get Wechat MP Article Detail HTML
     * @param {string} url 文章链接/Article URL
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeChatMediaPlatformWebAPIApi
     */
    public fetchMpArticleDetailHtmlApiV1WechatMpWebFetchMpArticleDetailHtmlGet_4(url: string, options?: any) {
        return WeChatMediaPlatformWebAPIApiFp(this.configuration).fetchMpArticleDetailHtmlApiV1WechatMpWebFetchMpArticleDetailHtmlGet_4(url, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * # [中文] ### 用途: - 获取微信公众号文章详情的JSON格式数据 - 此接口收费便宜，如果你需要获取详细的HTML格式数据，请使用`/api/v1/wechat_mp/web/fetch_mp_article_detail_html`接口，但是此接口收费更贵。 - 价格：0.001$/次 ### 参数: - url: 文章链接 ### 返回: - 文章详情的HTML  # [English] ### Purpose: - Get WeChat MP Article Detail in JSON format - This interface is cheaper, if you need detailed HTML format data, please use the `/api/v1/wechat_mp/web/fetch_mp_article_detail_html` interface, but this interface is more expensive. - Price: 0.001$/time ### Parameters: - url: Article URL ### Returns: - Article Detail HTML  # [示例/Example] url = \"https://mp.weixin.qq.com/s/TSNQKkRpN1qbKsT7BvzqIw\"
     * @summary 获取微信公众号文章详情的JSON/Get Wechat MP Article Detail JSON
     * @param {string} url 文章链接/Article URL
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeChatMediaPlatformWebAPIApi
     */
    public fetchMpArticleDetailJsonApiV1WechatMpWebFetchMpArticleDetailJsonGet(url: string, options?: any) {
        return WeChatMediaPlatformWebAPIApiFp(this.configuration).fetchMpArticleDetailJsonApiV1WechatMpWebFetchMpArticleDetailJsonGet(url, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * # [中文] ### 用途: - 获取微信公众号文章详情的JSON格式数据 - 此接口收费便宜，如果你需要获取详细的HTML格式数据，请使用`/api/v1/wechat_mp/web/fetch_mp_article_detail_html`接口，但是此接口收费更贵。 - 价格：0.001$/次 ### 参数: - url: 文章链接 ### 返回: - 文章详情的HTML  # [English] ### Purpose: - Get WeChat MP Article Detail in JSON format - This interface is cheaper, if you need detailed HTML format data, please use the `/api/v1/wechat_mp/web/fetch_mp_article_detail_html` interface, but this interface is more expensive. - Price: 0.001$/time ### Parameters: - url: Article URL ### Returns: - Article Detail HTML  # [示例/Example] url = \"https://mp.weixin.qq.com/s/TSNQKkRpN1qbKsT7BvzqIw\"
     * @summary 获取微信公众号文章详情的JSON/Get Wechat MP Article Detail JSON
     * @param {string} url 文章链接/Article URL
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeChatMediaPlatformWebAPIApi
     */
    public fetchMpArticleDetailJsonApiV1WechatMpWebFetchMpArticleDetailJsonGet_5(url: string, options?: any) {
        return WeChatMediaPlatformWebAPIApiFp(this.configuration).fetchMpArticleDetailJsonApiV1WechatMpWebFetchMpArticleDetailJsonGet_5(url, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * # [中文] ### 用途: - 获取微信公众号文章列表 ### 参数: - ghid: 公众号ID - offset: 偏移量 ### 返回: - 文章列表  # [English] ### Purpose: - Get Wechat MP Article List ### Parameters: - ghid: MP ID - offset: Offset ### Returns: - Article List  # [示例/Example] ghid = \"gh_a3d35d4c9d3f\" offset = \"\"
     * @summary 获取微信公众号文章列表/Get Wechat MP Article List
     * @param {string} ghid 公众号ID/MP ID
     * @param {string} [offset] 偏移量/Offset
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeChatMediaPlatformWebAPIApi
     */
    public fetchMpArticleListApiV1WechatMpWebFetchMpArticleListGet(ghid: string, offset?: string, options?: any) {
        return WeChatMediaPlatformWebAPIApiFp(this.configuration).fetchMpArticleListApiV1WechatMpWebFetchMpArticleListGet(ghid, offset, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * # [中文] ### 用途: - 获取微信公众号文章列表 ### 参数: - ghid: 公众号ID - offset: 偏移量 ### 返回: - 文章列表  # [English] ### Purpose: - Get Wechat MP Article List ### Parameters: - ghid: MP ID - offset: Offset ### Returns: - Article List  # [示例/Example] ghid = \"gh_a3d35d4c9d3f\" offset = \"\"
     * @summary 获取微信公众号文章列表/Get Wechat MP Article List
     * @param {string} ghid 公众号ID/MP ID
     * @param {string} [offset] 偏移量/Offset
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeChatMediaPlatformWebAPIApi
     */
    public fetchMpArticleListApiV1WechatMpWebFetchMpArticleListGet_6(ghid: string, offset?: string, options?: any) {
        return WeChatMediaPlatformWebAPIApiFp(this.configuration).fetchMpArticleListApiV1WechatMpWebFetchMpArticleListGet_6(ghid, offset, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * # [中文] ### 用途: - 获取微信公众号文章阅读量 ### 参数: - url: 文章链接 - comment_id: 评论ID ### 返回: - 阅读量  # [English] ### Purpose: - Get Wechat MP Article Read Count ### Parameters: - url: Article URL - comment_id: Comment ID ### Returns: - Read Count  # [示例/Example] url = \"https://mp.weixin.qq.com/s/hrTDuwh0pWyJFYC93kKCrg\" comment_id = \"3363399664632332289\"
     * @summary 获取微信公众号文章阅读量/Get Wechat MP Article Read Count
     * @param {string} url 文章链接/Article URL
     * @param {string} commentId 评论ID/Comment ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeChatMediaPlatformWebAPIApi
     */
    public fetchMpArticleReadCountApiV1WechatMpWebFetchMpArticleReadCountGet(url: string, commentId: string, options?: any) {
        return WeChatMediaPlatformWebAPIApiFp(this.configuration).fetchMpArticleReadCountApiV1WechatMpWebFetchMpArticleReadCountGet(url, commentId, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * # [中文] ### 用途: - 获取微信公众号文章阅读量 ### 参数: - url: 文章链接 - comment_id: 评论ID ### 返回: - 阅读量  # [English] ### Purpose: - Get Wechat MP Article Read Count ### Parameters: - url: Article URL - comment_id: Comment ID ### Returns: - Read Count  # [示例/Example] url = \"https://mp.weixin.qq.com/s/hrTDuwh0pWyJFYC93kKCrg\" comment_id = \"3363399664632332289\"
     * @summary 获取微信公众号文章阅读量/Get Wechat MP Article Read Count
     * @param {string} url 文章链接/Article URL
     * @param {string} commentId 评论ID/Comment ID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeChatMediaPlatformWebAPIApi
     */
    public fetchMpArticleReadCountApiV1WechatMpWebFetchMpArticleReadCountGet_7(url: string, commentId: string, options?: any) {
        return WeChatMediaPlatformWebAPIApiFp(this.configuration).fetchMpArticleReadCountApiV1WechatMpWebFetchMpArticleReadCountGet_7(url, commentId, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * # [中文] ### 用途: - 获取微信公众号文章永久链接 ### 参数: - sogou_url: 搜狗链接 ### 返回: - 永久链接  # [English] ### Purpose: - Get Wechat MP Article URL ### Parameters: - sogou_url: Sogou URL ### Returns: - Article URL  # [示例/Example] sogou_url = \"https://weixin.sogou.com/link?url=dn9a_-gY295K0Rci_xozVXfdMkSQTLW6cwJThYulHEtVjXrGTiVgS5mzcw64XRlRaPIdMgILsPEBI9djq3byAlqXa8Fplpd9bV3r44ewJj5IFttt-prmTSHShu8JtNlpDYR_z_1xvD2J_XrGTUriRYOOY2mt9pZSIUQEepUVTybxAOW4P5fEPd23R0CgK6W3KEODtIkcv1U5w5VkZ8a7_lyyAqreiCgr1YH9mz_7mzFDl6rX6ZnkVYNsUHV_OmaXBUCqpZ1Pa6YO8fIRwtipOg..&type=2&query=deepseek&token=C2E90D2050EB6EA5C2C4EDB1541D855FC322013E67C5DC5A&k=4&h=k\"
     * @summary 获取微信公众号文章永久链接/Get Wechat MP Article URL
     * @param {string} sogouUrl 搜狗链接/Sogou URL
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeChatMediaPlatformWebAPIApi
     */
    public fetchMpArticleUrlApiV1WechatMpWebFetchMpArticleUrlGet(sogouUrl: string, options?: any) {
        return WeChatMediaPlatformWebAPIApiFp(this.configuration).fetchMpArticleUrlApiV1WechatMpWebFetchMpArticleUrlGet(sogouUrl, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * # [中文] ### 用途: - 获取微信公众号文章永久链接 ### 参数: - sogou_url: 搜狗链接 ### 返回: - 永久链接  # [English] ### Purpose: - Get Wechat MP Article URL ### Parameters: - sogou_url: Sogou URL ### Returns: - Article URL  # [示例/Example] sogou_url = \"https://weixin.sogou.com/link?url=dn9a_-gY295K0Rci_xozVXfdMkSQTLW6cwJThYulHEtVjXrGTiVgS5mzcw64XRlRaPIdMgILsPEBI9djq3byAlqXa8Fplpd9bV3r44ewJj5IFttt-prmTSHShu8JtNlpDYR_z_1xvD2J_XrGTUriRYOOY2mt9pZSIUQEepUVTybxAOW4P5fEPd23R0CgK6W3KEODtIkcv1U5w5VkZ8a7_lyyAqreiCgr1YH9mz_7mzFDl6rX6ZnkVYNsUHV_OmaXBUCqpZ1Pa6YO8fIRwtipOg..&type=2&query=deepseek&token=C2E90D2050EB6EA5C2C4EDB1541D855FC322013E67C5DC5A&k=4&h=k\"
     * @summary 获取微信公众号文章永久链接/Get Wechat MP Article URL
     * @param {string} sogouUrl 搜狗链接/Sogou URL
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeChatMediaPlatformWebAPIApi
     */
    public fetchMpArticleUrlApiV1WechatMpWebFetchMpArticleUrlGet_8(sogouUrl: string, options?: any) {
        return WeChatMediaPlatformWebAPIApiFp(this.configuration).fetchMpArticleUrlApiV1WechatMpWebFetchMpArticleUrlGet_8(sogouUrl, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * # [中文] ### 用途: - 获取微信公众号长链接转短链接 ### 参数: - url: 文章链接 ### 返回: - 短链接  # [English] ### Purpose: - Get Wechat MP Long URL to Short URL ### Parameters: - url: Article URL ### Returns: - Short URL  # [示例/Example] url = \"http://mp.weixin.qq.com/s?__biz=MzIyMDQzMTM4Mg==&mid=2247504868&idx=1&sn=37ee48875df1be54cb766783177ce61d\"
     * @summary 获取微信公众号长链接转短链接/Get Wechat MP Long URL to Short URL
     * @param {string} url 文章链接/Article URL
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeChatMediaPlatformWebAPIApi
     */
    public fetchMpArticleUrlConversionApiV1WechatMpWebFetchMpArticleUrlConversionGet(url: string, options?: any) {
        return WeChatMediaPlatformWebAPIApiFp(this.configuration).fetchMpArticleUrlConversionApiV1WechatMpWebFetchMpArticleUrlConversionGet(url, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * # [中文] ### 用途: - 获取微信公众号长链接转短链接 ### 参数: - url: 文章链接 ### 返回: - 短链接  # [English] ### Purpose: - Get Wechat MP Long URL to Short URL ### Parameters: - url: Article URL ### Returns: - Short URL  # [示例/Example] url = \"http://mp.weixin.qq.com/s?__biz=MzIyMDQzMTM4Mg==&mid=2247504868&idx=1&sn=37ee48875df1be54cb766783177ce61d\"
     * @summary 获取微信公众号长链接转短链接/Get Wechat MP Long URL to Short URL
     * @param {string} url 文章链接/Article URL
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeChatMediaPlatformWebAPIApi
     */
    public fetchMpArticleUrlConversionApiV1WechatMpWebFetchMpArticleUrlConversionGet_9(url: string, options?: any) {
        return WeChatMediaPlatformWebAPIApiFp(this.configuration).fetchMpArticleUrlConversionApiV1WechatMpWebFetchMpArticleUrlConversionGet_9(url, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * # [中文] ### 用途: - 获取微信公众号关联文章 ### 参数: - url: 文章链接 ### 返回: - 关联文章  # [English] ### Purpose: - Get Wechat MP Related Articles ### Parameters: - url: Article URL ### Returns: - Related Articles  # [示例/Example] url = \"https://mp.weixin.qq.com/s/Ko5V9jw9kwL8TO6Q7J3UqQ\"
     * @summary 获取微信公众号关联文章/Get Wechat MP Related Articles
     * @param {string} url 文章链接/Article URL
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeChatMediaPlatformWebAPIApi
     */
    public fetchMpRelatedArticlesApiV1WechatMpWebFetchMpRelatedArticlesGet(url: string, options?: any) {
        return WeChatMediaPlatformWebAPIApiFp(this.configuration).fetchMpRelatedArticlesApiV1WechatMpWebFetchMpRelatedArticlesGet(url, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * # [中文] ### 用途: - 获取微信公众号关联文章 ### 参数: - url: 文章链接 ### 返回: - 关联文章  # [English] ### Purpose: - Get Wechat MP Related Articles ### Parameters: - url: Article URL ### Returns: - Related Articles  # [示例/Example] url = \"https://mp.weixin.qq.com/s/Ko5V9jw9kwL8TO6Q7J3UqQ\"
     * @summary 获取微信公众号关联文章/Get Wechat MP Related Articles
     * @param {string} url 文章链接/Article URL
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WeChatMediaPlatformWebAPIApi
     */
    public fetchMpRelatedArticlesApiV1WechatMpWebFetchMpRelatedArticlesGet_10(url: string, options?: any) {
        return WeChatMediaPlatformWebAPIApiFp(this.configuration).fetchMpRelatedArticlesApiV1WechatMpWebFetchMpRelatedArticlesGet_10(url, options).then((request) => request(this.axios, this.basePath));
    }

}
